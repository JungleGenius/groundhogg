"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = NavigationItem;

var _element = require("@wordpress/element");

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _classnames = _interopRequireDefault(require("classnames"));

var _lodash = require("lodash");

var _icons = require("@wordpress/icons");

var _button = _interopRequireDefault(require("../../button"));

var _context = require("../context");

var _navigationStyles = require("../styles/navigation-styles");

var _useNavigationTreeItem = require("./use-navigation-tree-item");

var _context2 = require("../menu/context");

/**
 * External dependencies
 */

/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */
function NavigationItem(props) {
  var badge = props.badge,
      children = props.children,
      className = props.className,
      href = props.href,
      item = props.item,
      navigateToMenu = props.navigateToMenu,
      _props$onClick = props.onClick,
      onClick = _props$onClick === void 0 ? _lodash.noop : _props$onClick,
      title = props.title,
      restProps = (0, _objectWithoutProperties2.default)(props, ["badge", "children", "className", "href", "item", "navigateToMenu", "onClick", "title"]);
  (0, _useNavigationTreeItem.useNavigationTreeItem)(props);

  var _useNavigationContext = (0, _context.useNavigationContext)(),
      activeItem = _useNavigationContext.activeItem,
      setActiveMenu = _useNavigationContext.setActiveMenu;

  var _useNavigationMenuCon = (0, _context2.useNavigationMenuContext)(),
      isActive = _useNavigationMenuCon.isActive; // If this item is in an inactive menu, then we skip rendering
  // We need to make sure this component gets mounted though
  // To make sure inactive items are included in the navigation tree


  if (!isActive) {
    return null;
  }

  var classes = (0, _classnames.default)('components-navigation__item', className, {
    'is-active': item && activeItem === item
  });

  var onItemClick = function onItemClick(event) {
    if (navigateToMenu) {
      setActiveMenu(navigateToMenu);
    }

    onClick(event);
  };

  return (0, _element.createElement)(_navigationStyles.ItemUI, {
    className: classes
  }, children || (0, _element.createElement)(_button.default, (0, _extends2.default)({
    href: href,
    onClick: onItemClick
  }, restProps), title && (0, _element.createElement)(_navigationStyles.ItemTitleUI, {
    className: "components-navigation__item-title",
    variant: "body.small",
    as: "span"
  }, title), badge && (0, _element.createElement)(_navigationStyles.ItemBadgeUI, {
    className: "components-navigation__item-badge"
  }, badge), navigateToMenu && (0, _element.createElement)(_icons.Icon, {
    icon: _icons.chevronRight
  })));
}
//# sourceMappingURL=index.js.map