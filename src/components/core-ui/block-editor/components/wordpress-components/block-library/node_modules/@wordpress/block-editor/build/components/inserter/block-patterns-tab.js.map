{"version":3,"sources":["@wordpress/block-editor/src/components/inserter/block-patterns-tab.js"],"names":["BlockPatternsSearchResults","filterValue","onInsert","allPatterns","onClick","filteredPatterns","currentShownPatterns","length","BlockPatternsCategory","selectedCategory","onClickCategory","allCategories","populatedCategories","filter","category","some","pattern","categories","includes","name","patternCategory","getPatternIndex","Infinity","find","push","label","indexedCategories","map","index","Math","min","cat","undefined","currentCategoryPatterns","orderedPatterns","sort","a","b","title","BlockPatternsTabs"],"mappings":";;;;;;;;;AAQA;;;;;;AALA;;AAMA;;AACA;;AAKA;;AACA;;AACA;;AACA;;AACA;;AACA;;AApBA;;;;AAKA;;;;AAOA;;;AAUA,SAASA,0BAAT,OAAiE;AAAA,MAA1BC,WAA0B,QAA1BA,WAA0B;AAAA,MAAbC,QAAa,QAAbA,QAAa;;AAAA,0BAC7B,gCAAkBA,QAAlB,CAD6B;AAAA;AAAA,MACxDC,WADwD;AAAA,MACzCC,OADyC;;AAGhE,MAAMC,gBAAgB,GAAG,sBACxB;AAAA,WAAM,8BAAaF,WAAb,EAA0BF,WAA1B,CAAN;AAAA,GADwB,EAExB,CAAEA,WAAF,EAAeE,WAAf,CAFwB,CAAzB;AAKA,MAAMG,oBAAoB,GAAG,2BAAcD,gBAAd,CAA7B;;AAEA,MAAKJ,WAAL,EAAmB;AAClB,WAAO,CAAC,CAAEI,gBAAgB,CAACE,MAApB,GACN,4BAAC,cAAD;AAAe,MAAA,KAAK,EAAG,cAAI,gBAAJ;AAAvB,OACC,4BAAC,0BAAD;AACC,MAAA,aAAa,EAAGD,oBADjB;AAEC,MAAA,aAAa,EAAGD,gBAFjB;AAGC,MAAA,cAAc,EAAGD;AAHlB,MADD,CADM,GASN,4BAAC,kBAAD,OATD;AAWA;AACD;;AAED,SAASI,qBAAT,QAII;AAAA,MAHHN,QAGG,SAHHA,QAGG;AAAA,MAFHO,gBAEG,SAFHA,gBAEG;AAAA,MADHC,eACG,SADHA,eACG;;AAAA,2BAC6C,gCAC/CR,QAD+C,CAD7C;AAAA;AAAA,MACKC,WADL;AAAA,MACkBQ,aADlB;AAAA,MACiCP,OADjC,0BAKH;;;AACA,MAAMQ,mBAAmB,GAAG,sBAC3B;AAAA,WACCD,aAAa,CAACE,MAAd,CAAsB,UAAEC,QAAF;AAAA,aACrBX,WAAW,CAACY,IAAZ,CAAkB,UAAEC,OAAF;AAAA,eACjBA,OAAO,CAACC,UAAR,CAAmBC,QAAnB,CAA6BJ,QAAQ,CAACK,IAAtC,CADiB;AAAA,OAAlB,CADqB;AAAA,KAAtB,CADD;AAAA,GAD2B,EAO3B,CAAEhB,WAAF,EAAeQ,aAAf,CAP2B,CAA5B;AAUA,MAAMS,eAAe,GAAGX,gBAAgB,GACrCA,gBADqC,GAErCG,mBAAmB,CAAE,CAAF,CAFtB;AAIA,0BAAW,YAAM;AAChB,QACCT,WAAW,CAACY,IAAZ,CACC,UAAEC,OAAF;AAAA,aAAeK,eAAe,CAAEL,OAAF,CAAf,KAA+BM,QAA9C;AAAA,KADD,KAGA,CAAEV,mBAAmB,CAACW,IAApB,CACD,UAAET,QAAF;AAAA,aAAgBA,QAAQ,CAACK,IAAT,KAAkB,eAAlC;AAAA,KADC,CAJH,EAOE;AACDP,MAAAA,mBAAmB,CAACY,IAApB,CAA0B;AACzBL,QAAAA,IAAI,EAAE,eADmB;AAEzBM,QAAAA,KAAK,EAAE,cAAI,eAAJ;AAFkB,OAA1B;AAIA;AACD,GAdD,EAcG,CAAEb,mBAAF,EAAuBT,WAAvB,CAdH;AAgBA,MAAMkB,eAAe,GAAG,0BACvB,UAAEL,OAAF,EAAe;AACd,QAAK,CAAEA,OAAO,CAACC,UAAV,IAAwB,CAAED,OAAO,CAACC,UAAR,CAAmBV,MAAlD,EAA2D;AAC1D,aAAOe,QAAP;AACA;;AACD,QAAMI,iBAAiB,GAAG,uBACzBd,mBAAmB,CAACe,GAApB,CAAyB,iBAAYC,KAAZ;AAAA,UAAIT,IAAJ,SAAIA,IAAJ;AAAA,aAAuB,CAC/CA,IAD+C,EAE/CS,KAF+C,CAAvB;AAAA,KAAzB,CADyB,CAA1B;AAMA,WAAOC,IAAI,CAACC,GAAL,OAAAD,IAAI,mCACPb,OAAO,CAACC,UAAR,CAAmBU,GAAnB,CAAwB,UAAEI,GAAF;AAAA,aAC1BL,iBAAiB,CAAEK,GAAF,CAAjB,KAA6BC,SAA7B,GACGN,iBAAiB,CAAEK,GAAF,CADpB,GAEGT,QAHuB;AAAA,KAAxB,CADO,EAAX;AAOA,GAlBsB,EAmBvB,CAAEV,mBAAF,CAnBuB,CAAxB;AAsBA,MAAMqB,uBAAuB,GAAG,sBAC/B;AAAA,WACC9B,WAAW,CAACU,MAAZ,CAAoB,UAAEG,OAAF;AAAA,aACnBI,eAAe,CAACD,IAAhB,KAAyB,eAAzB,GACGE,eAAe,CAAEL,OAAF,CAAf,KAA+BM,QADlC,GAEGN,OAAO,CAACC,UAAR,IACAD,OAAO,CAACC,UAAR,CAAmBC,QAAnB,CAA6BE,eAAe,CAACD,IAA7C,CAJgB;AAAA,KAApB,CADD;AAAA,GAD+B,EAQ/B,CAAEhB,WAAF,EAAeiB,eAAf,CAR+B,CAAhC,CA1DG,CAqEH;;AACA,MAAMc,eAAe,GAAG,sBAAS,YAAM;AACtC,WAAOD,uBAAuB,CAACE,IAAxB,CAA8B,UAAEC,CAAF,EAAKC,CAAL,EAAY;AAChD,aAAOhB,eAAe,CAAEe,CAAF,CAAf,GAAuBf,eAAe,CAAEgB,CAAF,CAA7C;AACA,KAFM,CAAP;AAGA,GAJuB,EAIrB,CAAEJ,uBAAF,EAA2BZ,eAA3B,CAJqB,CAAxB;AAMA,MAAMf,oBAAoB,GAAG,2BAAc4B,eAAd,CAA7B;AAEA,SACC,qDACG,CAAC,CAAED,uBAAuB,CAAC1B,MAA3B,IACD,4BAAC,qBAAD;AACC,IAAA,GAAG,EAAGa,eAAe,CAACD,IADvB;AAEC,IAAA,KAAK,EAAGC,eAAe,CAACkB,KAFzB;AAGC,IAAA,gBAAgB,EAAGlB,eAHpB;AAIC,IAAA,iBAAiB,EAAGR,mBAJrB;AAKC,IAAA,eAAe,EAAGF;AALnB,KAOC,4BAAC,0BAAD;AACC,IAAA,aAAa,EAAGJ,oBADjB;AAEC,IAAA,aAAa,EAAG2B,uBAFjB;AAGC,IAAA,cAAc,EAAG7B;AAHlB,IAPD,CAFF,CADD;AAmBA;;AAED,SAASmC,iBAAT,QAKI;AAAA,MAJHrC,QAIG,SAJHA,QAIG;AAAA,MAHHQ,eAGG,SAHHA,eAGG;AAAA,MAFHT,WAEG,SAFHA,WAEG;AAAA,MADHQ,gBACG,SADHA,gBACG;AACH,SAAOR,WAAW,GACjB,4BAAC,0BAAD;AACC,IAAA,QAAQ,EAAGC,QADZ;AAEC,IAAA,WAAW,EAAGD;AAFf,IADiB,GAMjB,4BAAC,qBAAD;AACC,IAAA,gBAAgB,EAAGQ,gBADpB;AAEC,IAAA,QAAQ,EAAGP,QAFZ;AAGC,IAAA,eAAe,EAAGQ;AAHnB,IAND;AAYA;;eAEc6B,iB","sourcesContent":["/**\n * External dependencies\n */\nimport { fromPairs } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { useMemo, useCallback, useEffect } from '@wordpress/element';\nimport { __, _x } from '@wordpress/i18n';\nimport { useAsyncList } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport InserterPanel from './panel';\nimport PatternInserterPanel from './pattern-panel';\nimport { searchItems } from './search-items';\nimport InserterNoResults from './no-results';\nimport usePatternsState from './hooks/use-patterns-state';\nimport BlockPatternList from '../block-patterns-list';\n\nfunction BlockPatternsSearchResults( { filterValue, onInsert } ) {\n\tconst [ allPatterns, , onClick ] = usePatternsState( onInsert );\n\n\tconst filteredPatterns = useMemo(\n\t\t() => searchItems( allPatterns, filterValue ),\n\t\t[ filterValue, allPatterns ]\n\t);\n\n\tconst currentShownPatterns = useAsyncList( filteredPatterns );\n\n\tif ( filterValue ) {\n\t\treturn !! filteredPatterns.length ? (\n\t\t\t<InserterPanel title={ __( 'Search Results' ) }>\n\t\t\t\t<BlockPatternList\n\t\t\t\t\tshownPatterns={ currentShownPatterns }\n\t\t\t\t\tblockPatterns={ filteredPatterns }\n\t\t\t\t\tonClickPattern={ onClick }\n\t\t\t\t/>\n\t\t\t</InserterPanel>\n\t\t) : (\n\t\t\t<InserterNoResults />\n\t\t);\n\t}\n}\n\nfunction BlockPatternsCategory( {\n\tonInsert,\n\tselectedCategory,\n\tonClickCategory,\n} ) {\n\tconst [ allPatterns, allCategories, onClick ] = usePatternsState(\n\t\tonInsert\n\t);\n\n\t// Remove any empty categories\n\tconst populatedCategories = useMemo(\n\t\t() =>\n\t\t\tallCategories.filter( ( category ) =>\n\t\t\t\tallPatterns.some( ( pattern ) =>\n\t\t\t\t\tpattern.categories.includes( category.name )\n\t\t\t\t)\n\t\t\t),\n\t\t[ allPatterns, allCategories ]\n\t);\n\n\tconst patternCategory = selectedCategory\n\t\t? selectedCategory\n\t\t: populatedCategories[ 0 ];\n\n\tuseEffect( () => {\n\t\tif (\n\t\t\tallPatterns.some(\n\t\t\t\t( pattern ) => getPatternIndex( pattern ) === Infinity\n\t\t\t) &&\n\t\t\t! populatedCategories.find(\n\t\t\t\t( category ) => category.name === 'uncategorized'\n\t\t\t)\n\t\t) {\n\t\t\tpopulatedCategories.push( {\n\t\t\t\tname: 'uncategorized',\n\t\t\t\tlabel: _x( 'Uncategorized' ),\n\t\t\t} );\n\t\t}\n\t}, [ populatedCategories, allPatterns ] );\n\n\tconst getPatternIndex = useCallback(\n\t\t( pattern ) => {\n\t\t\tif ( ! pattern.categories || ! pattern.categories.length ) {\n\t\t\t\treturn Infinity;\n\t\t\t}\n\t\t\tconst indexedCategories = fromPairs(\n\t\t\t\tpopulatedCategories.map( ( { name }, index ) => [\n\t\t\t\t\tname,\n\t\t\t\t\tindex,\n\t\t\t\t] )\n\t\t\t);\n\t\t\treturn Math.min(\n\t\t\t\t...pattern.categories.map( ( cat ) =>\n\t\t\t\t\tindexedCategories[ cat ] !== undefined\n\t\t\t\t\t\t? indexedCategories[ cat ]\n\t\t\t\t\t\t: Infinity\n\t\t\t\t)\n\t\t\t);\n\t\t},\n\t\t[ populatedCategories ]\n\t);\n\n\tconst currentCategoryPatterns = useMemo(\n\t\t() =>\n\t\t\tallPatterns.filter( ( pattern ) =>\n\t\t\t\tpatternCategory.name === 'uncategorized'\n\t\t\t\t\t? getPatternIndex( pattern ) === Infinity\n\t\t\t\t\t: pattern.categories &&\n\t\t\t\t\t  pattern.categories.includes( patternCategory.name )\n\t\t\t),\n\t\t[ allPatterns, patternCategory ]\n\t);\n\n\t// Ordering the patterns is important for the async rendering.\n\tconst orderedPatterns = useMemo( () => {\n\t\treturn currentCategoryPatterns.sort( ( a, b ) => {\n\t\t\treturn getPatternIndex( a ) - getPatternIndex( b );\n\t\t} );\n\t}, [ currentCategoryPatterns, getPatternIndex ] );\n\n\tconst currentShownPatterns = useAsyncList( orderedPatterns );\n\n\treturn (\n\t\t<>\n\t\t\t{ !! currentCategoryPatterns.length && (\n\t\t\t\t<PatternInserterPanel\n\t\t\t\t\tkey={ patternCategory.name }\n\t\t\t\t\ttitle={ patternCategory.title }\n\t\t\t\t\tselectedCategory={ patternCategory }\n\t\t\t\t\tpatternCategories={ populatedCategories }\n\t\t\t\t\tonClickCategory={ onClickCategory }\n\t\t\t\t>\n\t\t\t\t\t<BlockPatternList\n\t\t\t\t\t\tshownPatterns={ currentShownPatterns }\n\t\t\t\t\t\tblockPatterns={ currentCategoryPatterns }\n\t\t\t\t\t\tonClickPattern={ onClick }\n\t\t\t\t\t/>\n\t\t\t\t</PatternInserterPanel>\n\t\t\t) }\n\t\t</>\n\t);\n}\n\nfunction BlockPatternsTabs( {\n\tonInsert,\n\tonClickCategory,\n\tfilterValue,\n\tselectedCategory,\n} ) {\n\treturn filterValue ? (\n\t\t<BlockPatternsSearchResults\n\t\t\tonInsert={ onInsert }\n\t\t\tfilterValue={ filterValue }\n\t\t/>\n\t) : (\n\t\t<BlockPatternsCategory\n\t\t\tselectedCategory={ selectedCategory }\n\t\t\tonInsert={ onInsert }\n\t\t\tonClickCategory={ onClickCategory }\n\t\t/>\n\t);\n}\n\nexport default BlockPatternsTabs;\n"]}