{"version":3,"sources":["@wordpress/block-editor/src/components/use-editor-feature/index.js"],"names":["deprecatedFlags","settings","colors","undefined","gradients","disableCustomColors","disableCustomGradients","fontSizes","disableCustomFontSizes","enableCustomLineHeight","enableCustomUnits","useEditorFeature","featurePath","blockName","name","setting","select","getSettings","globalPath","blockPath","experimentalFeaturesResult","deprecatedSettingsValue"],"mappings":";;;;;;;AAGA;;AAKA;;AAKA;;AAbA;;;;AAKA;;;;AAKA;;;AAKA,IAAMA,eAAe,GAAG;AACvB,mBAAiB,sBAAEC,QAAF;AAAA,WAChBA,QAAQ,CAACC,MAAT,KAAoBC,SAApB,GAAgCA,SAAhC,GAA4CF,QAAQ,CAACC,MADrC;AAAA,GADM;AAGvB,qBAAmB,wBAAED,QAAF;AAAA,WAClBA,QAAQ,CAACG,SAAT,KAAuBD,SAAvB,GAAmCA,SAAnC,GAA+CF,QAAQ,CAACG,SADtC;AAAA,GAHI;AAKvB,kBAAgB,qBAAEH,QAAF;AAAA,WACfA,QAAQ,CAACI,mBAAT,KAAiCF,SAAjC,GACGA,SADH,GAEG,CAAEF,QAAQ,CAACI,mBAHC;AAAA,GALO;AASvB,0BAAwB,6BAAEJ,QAAF;AAAA,WACvBA,QAAQ,CAACK,sBAAT,KAAoCH,SAApC,GACGA,SADH,GAEG,CAAEF,QAAQ,CAACK,sBAHS;AAAA,GATD;AAavB,0BAAwB,6BAAEL,QAAF;AAAA,WACvBA,QAAQ,CAACM,SAAT,KAAuBJ,SAAvB,GAAmCA,SAAnC,GAA+CF,QAAQ,CAACM,SADjC;AAAA,GAbD;AAevB,+BAA6B,kCAAEN,QAAF;AAAA,WAC5BA,QAAQ,CAACO,sBAAT,KAAoCL,SAApC,GACGA,SADH,GAEG,CAAEF,QAAQ,CAACO,sBAHc;AAAA,GAfN;AAmBvB,iCAA+B,oCAAEP,QAAF;AAAA,WAC9BA,QAAQ,CAACQ,sBADqB;AAAA,GAnBR;AAqBvB,mBAAiB,sBAAER,QAAF,EAAgB;AAChC,QAAKA,QAAQ,CAACS,iBAAT,KAA+BP,SAApC,EAAgD;AAC/C;AACA;;AAED,QAAKF,QAAQ,CAACS,iBAAT,KAA+B,IAApC,EAA2C;AAC1C,aAAO,CAAE,IAAF,EAAQ,IAAR,EAAc,KAAd,EAAqB,IAArB,EAA2B,IAA3B,CAAP;AACA;;AAED,WAAOT,QAAQ,CAACS,iBAAhB;AACA;AA/BsB,CAAxB;AAkCA;;;;;;;;;;;;;;AAae,SAASC,gBAAT,CAA2BC,WAA3B,EAAyC;AAAA,6BAC3B,qCAD2B;AAAA,MACzCC,SADyC,wBAC/CC,IAD+C;;AAGvD,MAAMC,OAAO,GAAG,qBACf,UAAEC,MAAF,EAAc;AAAA;;AACb,QAAMf,QAAQ,GAAGe,MAAM,CAAE,mBAAF,CAAN,CAA8BC,WAA9B,EAAjB,CADa,CAGb;AACA;AACA;AACA;AACA;;AACA,QAAMC,UAAU,2CAAqCN,WAArC,CAAhB;AACA,QAAMO,SAAS,oCAA8BN,SAA9B,cAA6CD,WAA7C,CAAf;AACA,QAAMQ,0BAA0B,WAC/B,iBAAKnB,QAAL,EAAekB,SAAf,CAD+B,uCACD,iBAAKlB,QAAL,EAAeiB,UAAf,CAD/B;;AAEA,QAAKE,0BAA0B,KAAKjB,SAApC,EAAgD;AAC/C,aAAOiB,0BAAP;AACA,KAdY,CAgBb;;;AACA,QAAMC,uBAAuB,GAAGrB,eAAe,CAAEY,WAAF,CAAf,GAC7BZ,eAAe,CAAEY,WAAF,CAAf,CAAgCX,QAAhC,CAD6B,GAE7BE,SAFH;;AAGA,QAAKkB,uBAAuB,KAAKlB,SAAjC,EAA6C;AAC5C,aAAOkB,uBAAP;AACA,KAtBY,CAwBb;AACA;AACA;AACA;;;AACA,WAAOT,WAAW,KAAK,oBAAhB,GAAuC,IAAvC,GAA8CT,SAArD;AACA,GA9Bc,EA+Bf,CAAEU,SAAF,EAAaD,WAAb,CA/Be,CAAhB;AAkCA,SAAOG,OAAP;AACA","sourcesContent":["/**\n * External dependencies\n */\nimport { get } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { useBlockEditContext } from '../block-edit';\n\nconst deprecatedFlags = {\n\t'color.palette': ( settings ) =>\n\t\tsettings.colors === undefined ? undefined : settings.colors,\n\t'color.gradients': ( settings ) =>\n\t\tsettings.gradients === undefined ? undefined : settings.gradients,\n\t'color.custom': ( settings ) =>\n\t\tsettings.disableCustomColors === undefined\n\t\t\t? undefined\n\t\t\t: ! settings.disableCustomColors,\n\t'color.customGradient': ( settings ) =>\n\t\tsettings.disableCustomGradients === undefined\n\t\t\t? undefined\n\t\t\t: ! settings.disableCustomGradients,\n\t'typography.fontSizes': ( settings ) =>\n\t\tsettings.fontSizes === undefined ? undefined : settings.fontSizes,\n\t'typography.customFontSize': ( settings ) =>\n\t\tsettings.disableCustomFontSizes === undefined\n\t\t\t? undefined\n\t\t\t: ! settings.disableCustomFontSizes,\n\t'typography.customLineHeight': ( settings ) =>\n\t\tsettings.enableCustomLineHeight,\n\t'spacing.units': ( settings ) => {\n\t\tif ( settings.enableCustomUnits === undefined ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( settings.enableCustomUnits === true ) {\n\t\t\treturn [ 'px', 'em', 'rem', 'vh', 'vw' ];\n\t\t}\n\n\t\treturn settings.enableCustomUnits;\n\t},\n};\n\n/**\n * Hook that retrieves the setting for the given editor feature.\n * It works with nested objects using by finding the value at path.\n *\n * @param {string} featurePath  The path to the feature.\n *\n * @return {any} Returns the value defined for the setting.\n *\n * @example\n * ```js\n * const isEnabled = useEditorFeature( 'typography.dropCap' );\n * ```\n */\nexport default function useEditorFeature( featurePath ) {\n\tconst { name: blockName } = useBlockEditContext();\n\n\tconst setting = useSelect(\n\t\t( select ) => {\n\t\t\tconst settings = select( 'core/block-editor' ).getSettings();\n\n\t\t\t// 1 - Use __experimental features, if available.\n\t\t\t// We cascade to the global value if the block one is not available.\n\t\t\t//\n\t\t\t// TODO: make it work for blocks that define multiple selectors\n\t\t\t// such as core/heading or core/post-title.\n\t\t\tconst globalPath = `__experimentalFeatures.global.${ featurePath }`;\n\t\t\tconst blockPath = `__experimentalFeatures.${ blockName }.${ featurePath }`;\n\t\t\tconst experimentalFeaturesResult =\n\t\t\t\tget( settings, blockPath ) ?? get( settings, globalPath );\n\t\t\tif ( experimentalFeaturesResult !== undefined ) {\n\t\t\t\treturn experimentalFeaturesResult;\n\t\t\t}\n\n\t\t\t// 2 - Use deprecated settings, otherwise.\n\t\t\tconst deprecatedSettingsValue = deprecatedFlags[ featurePath ]\n\t\t\t\t? deprecatedFlags[ featurePath ]( settings )\n\t\t\t\t: undefined;\n\t\t\tif ( deprecatedSettingsValue !== undefined ) {\n\t\t\t\treturn deprecatedSettingsValue;\n\t\t\t}\n\n\t\t\t// 3 - Fall back for typography.dropCap:\n\t\t\t// This is only necessary to support typography.dropCap.\n\t\t\t// when __experimentalFeatures are not present (core without plugin).\n\t\t\t// To remove when __experimentalFeatures are ported to core.\n\t\t\treturn featurePath === 'typography.dropCap' ? true : undefined;\n\t\t},\n\t\t[ blockName, featurePath ]\n\t);\n\n\treturn setting;\n}\n"]}