{"version":3,"sources":["@wordpress/components/src/mobile/bottom-sheet/range-cell.native.js"],"names":["isIOS","Platform","OS","BottomSheetRangeCell","props","onInputFocus","bind","onInputBlur","onChangeValue","onCellPress","handleChangePixelRatio","onSubmitEditing","onChangeText","initialValue","validateInput","value","defaultValue","minimumValue","fontScale","getFontScale","state","accessible","hasFocus","inputValue","sliderValue","AppState","addEventListener","removeEventListener","PixelRatio","nextAppState","setState","text","maximumValue","decimalNum","Math","min","max","onChange","validValue","announceCurrentValue","updateValue","textValue","replace","sliderRef","reactTag","AccessibilityInfo","setAccessibilityFocus","nativeEvent","isNaN","Number","announcement","announceForAccessibility","disabled","step","preferredColorScheme","minimumTrackTintColor","maximumTrackTintColor","thumbTintColor","getStylesFromColorScheme","rangePreview","cellContainerStyle","shouldDisplayTextInput","cellProps","accessibilityLabel","label","defaultSliderStyle","styles","sliderTextInput","sliderDarkTextInput","containerStyle","container","containerIOS","containerAndroid","cellContainerStyles","slider","borderStyles","borderStyle","isSelected","width","Component"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport {\n\tPlatform,\n\tAccessibilityInfo,\n\tfindNodeHandle,\n\tTextInput,\n\tView,\n\tPixelRatio,\n\tAppState,\n} from 'react-native';\nimport Slider from '@react-native-community/slider';\n\n/**\n * WordPress dependencies\n */\nimport { _x, __, sprintf } from '@wordpress/i18n';\nimport { Component } from '@wordpress/element';\nimport { withPreferredColorScheme } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport Cell from './cell';\nimport { toFixed, removeNonDigit } from '../utils';\nimport styles from './range-cell.scss';\nimport borderStyles from './borderStyles.scss';\n\nconst isIOS = Platform.OS === 'ios';\n\nclass BottomSheetRangeCell extends Component {\n\tconstructor( props ) {\n\t\tsuper( props );\n\t\tthis.onInputFocus = this.onInputFocus.bind( this );\n\t\tthis.onInputBlur = this.onInputBlur.bind( this );\n\t\tthis.onChangeValue = this.onChangeValue.bind( this );\n\t\tthis.onCellPress = this.onCellPress.bind( this );\n\t\tthis.handleChangePixelRatio = this.handleChangePixelRatio.bind( this );\n\t\tthis.onSubmitEditing = this.onSubmitEditing.bind( this );\n\t\tthis.onChangeText = this.onChangeText.bind( this );\n\t\tconst initialValue = this.validateInput(\n\t\t\tprops.value || props.defaultValue || props.minimumValue\n\t\t);\n\t\tconst fontScale = this.getFontScale();\n\n\t\tthis.state = {\n\t\t\taccessible: true,\n\t\t\thasFocus: false,\n\t\t\tfontScale,\n\t\t\tinputValue: initialValue,\n\t\t\tsliderValue: initialValue,\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tAppState.addEventListener( 'change', this.handleChangePixelRatio );\n\t}\n\n\tcomponentWillUnmount() {\n\t\tAppState.removeEventListener( 'change', this.handleChangePixelRatio );\n\t}\n\n\tgetFontScale() {\n\t\treturn PixelRatio.getFontScale() < 1 ? 1 : PixelRatio.getFontScale();\n\t}\n\n\thandleChangePixelRatio( nextAppState ) {\n\t\tif ( nextAppState === 'active' ) {\n\t\t\tthis.setState( { fontScale: this.getFontScale() } );\n\t\t}\n\t}\n\n\tonInputFocus() {\n\t\tthis.setState( {\n\t\t\thasFocus: true,\n\t\t} );\n\t}\n\n\tonInputBlur() {\n\t\tthis.onChangeText( '' + this.state.sliderValue );\n\t\tthis.setState( {\n\t\t\thasFocus: false,\n\t\t} );\n\t}\n\n\tvalidateInput( text ) {\n\t\tconst { minimumValue, maximumValue, decimalNum } = this.props;\n\t\tif ( ! text ) {\n\t\t\treturn minimumValue;\n\t\t}\n\t\tif ( typeof text === 'number' ) {\n\t\t\treturn Math.min( Math.max( text, minimumValue ), maximumValue );\n\t\t}\n\t\treturn Math.min(\n\t\t\tMath.max( removeNonDigit( text, decimalNum ), minimumValue ),\n\t\t\tmaximumValue\n\t\t);\n\t}\n\n\tupdateValue( value ) {\n\t\tconst { onChange } = this.props;\n\t\tconst validValue = this.validateInput( value );\n\n\t\tthis.announceCurrentValue( `${ validValue }` );\n\t\tonChange( validValue );\n\t}\n\n\tonChangeValue( initialValue ) {\n\t\tconst { decimalNum } = this.props;\n\t\tinitialValue = toFixed( initialValue, decimalNum );\n\t\tthis.setState( { inputValue: initialValue } );\n\t\tthis.updateValue( initialValue );\n\t}\n\n\tonChangeText( textValue ) {\n\t\tconst { decimalNum } = this.props;\n\t\tconst inputValue = removeNonDigit( textValue, decimalNum );\n\t\ttextValue = inputValue.replace( ',', '.' );\n\t\ttextValue = toFixed( textValue, decimalNum );\n\t\tconst value = this.validateInput( textValue );\n\t\tthis.setState( {\n\t\t\tinputValue,\n\t\t\tsliderValue: value,\n\t\t} );\n\t\tthis.updateValue( value );\n\t}\n\n\tonCellPress() {\n\t\tthis.setState( { accessible: false } );\n\t\tif ( this.sliderRef ) {\n\t\t\tconst reactTag = findNodeHandle( this.sliderRef );\n\t\t\tAccessibilityInfo.setAccessibilityFocus( reactTag );\n\t\t}\n\t}\n\n\tonSubmitEditing( { nativeEvent: { text } } ) {\n\t\tconst { decimalNum } = this.props;\n\t\tif ( ! isNaN( Number( text ) ) ) {\n\t\t\ttext = toFixed( text.replace( ',', '.' ), decimalNum );\n\t\t\tconst validValue = this.validateInput( text );\n\n\t\t\tif ( this.state.inputValue !== validValue ) {\n\t\t\t\tthis.setState( { inputValue: validValue } );\n\t\t\t\tthis.announceCurrentValue( `${ validValue }` );\n\t\t\t\tthis.props.onChange( validValue );\n\t\t\t}\n\t\t}\n\t}\n\n\tannounceCurrentValue( value ) {\n\t\t/* translators: %s: current cell value. */\n\t\tconst announcement = sprintf( __( 'Current value is %s' ), value );\n\t\tAccessibilityInfo.announceForAccessibility( announcement );\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tvalue,\n\t\t\tdefaultValue,\n\t\t\tminimumValue = 0,\n\t\t\tmaximumValue = 10,\n\t\t\tdisabled,\n\t\t\tstep = 1,\n\t\t\tpreferredColorScheme,\n\t\t\tminimumTrackTintColor = preferredColorScheme === 'light'\n\t\t\t\t? '#00669b'\n\t\t\t\t: '#5198d9',\n\t\t\tmaximumTrackTintColor = isIOS ? '#e9eff3' : '#909090',\n\t\t\tthumbTintColor = ! isIOS && '#00669b',\n\t\t\tgetStylesFromColorScheme,\n\t\t\trangePreview,\n\t\t\tcellContainerStyle,\n\t\t\tshouldDisplayTextInput = true,\n\t\t\t...cellProps\n\t\t} = this.props;\n\n\t\tconst {\n\t\t\thasFocus,\n\t\t\taccessible,\n\t\t\tfontScale,\n\t\t\tinputValue,\n\t\t\tsliderValue,\n\t\t} = this.state;\n\n\t\tconst accessibilityLabel = sprintf(\n\t\t\t/* translators: accessibility text. Inform about current value. %1$s: Control label %2$s: Current value. */\n\t\t\t_x(\n\t\t\t\t'%1$s. Current value is %2$s',\n\t\t\t\t'Slider for picking a number inside a range'\n\t\t\t),\n\t\t\tcellProps.label,\n\t\t\tvalue\n\t\t);\n\n\t\tconst defaultSliderStyle = getStylesFromColorScheme(\n\t\t\tstyles.sliderTextInput,\n\t\t\tstyles.sliderDarkTextInput\n\t\t);\n\n\t\tconst containerStyle = [\n\t\t\tstyles.container,\n\t\t\tisIOS ? styles.containerIOS : styles.containerAndroid,\n\t\t];\n\n\t\treturn (\n\t\t\t<Cell\n\t\t\t\t{ ...cellProps }\n\t\t\t\tcellContainerStyle={ [\n\t\t\t\t\tstyles.cellContainerStyles,\n\t\t\t\t\tcellContainerStyle,\n\t\t\t\t] }\n\t\t\t\tcellRowContainerStyle={ containerStyle }\n\t\t\t\taccessibilityRole={ 'none' }\n\t\t\t\tvalue={ '' }\n\t\t\t\teditable={ false }\n\t\t\t\tactiveOpacity={ 1 }\n\t\t\t\taccessible={ accessible }\n\t\t\t\tonPress={ this.onCellPress }\n\t\t\t\taccessibilityLabel={ accessibilityLabel }\n\t\t\t\taccessibilityHint={\n\t\t\t\t\t/* translators: accessibility text (hint for focusing a slider) */\n\t\t\t\t\t__( 'Double tap to change the value using slider' )\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t<View style={ containerStyle }>\n\t\t\t\t\t{ rangePreview }\n\t\t\t\t\t<Slider\n\t\t\t\t\t\tvalue={ this.validateInput( sliderValue ) }\n\t\t\t\t\t\tdefaultValue={ defaultValue }\n\t\t\t\t\t\tdisabled={ disabled }\n\t\t\t\t\t\tstep={ step }\n\t\t\t\t\t\tminimumValue={ minimumValue }\n\t\t\t\t\t\tmaximumValue={ maximumValue }\n\t\t\t\t\t\tminimumTrackTintColor={ minimumTrackTintColor }\n\t\t\t\t\t\tmaximumTrackTintColor={ maximumTrackTintColor }\n\t\t\t\t\t\tthumbTintColor={ thumbTintColor }\n\t\t\t\t\t\tonValueChange={ this.onChangeValue }\n\t\t\t\t\t\tref={ ( slider ) => {\n\t\t\t\t\t\t\tthis.sliderRef = slider;\n\t\t\t\t\t\t} }\n\t\t\t\t\t\tstyle={ styles.slider }\n\t\t\t\t\t\taccessibilityRole={ 'adjustable' }\n\t\t\t\t\t/>\n\t\t\t\t\t{ shouldDisplayTextInput && (\n\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\tstyle={ [\n\t\t\t\t\t\t\t\tdefaultSliderStyle,\n\t\t\t\t\t\t\t\tborderStyles.borderStyle,\n\t\t\t\t\t\t\t\thasFocus && borderStyles.isSelected,\n\t\t\t\t\t\t\t\t{ width: 40 * fontScale },\n\t\t\t\t\t\t\t] }\n\t\t\t\t\t\t\tonChangeText={ this.onChangeText }\n\t\t\t\t\t\t\tonSubmitEditing={ this.onSubmitEditing }\n\t\t\t\t\t\t\tonFocus={ this.onInputFocus }\n\t\t\t\t\t\t\tonBlur={ this.onInputBlur }\n\t\t\t\t\t\t\tkeyboardType=\"numeric\"\n\t\t\t\t\t\t\treturnKeyType=\"done\"\n\t\t\t\t\t\t\tdefaultValue={ `${ inputValue }` }\n\t\t\t\t\t\t\tvalue={ inputValue }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t</View>\n\t\t\t</Cell>\n\t\t);\n\t}\n}\n\nexport default withPreferredColorScheme( BottomSheetRangeCell );\n"]}