"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = NavigationMenu;

var _element = require("@wordpress/element");

var _classnames = _interopRequireDefault(require("classnames"));

var _constants = require("../constants");

var _context = require("../context");

var _navigationStyles = require("../styles/navigation-styles");

var _backButton = _interopRequireDefault(require("../back-button"));

var _context2 = require("./context");

var _useNavigationTreeMenu = require("./use-navigation-tree-menu");

/**
 * External dependencies
 */

/**
 * Internal dependencies
 */
function NavigationMenu(props) {
  var backButtonLabel = props.backButtonLabel,
      children = props.children,
      className = props.className,
      _props$menu = props.menu,
      menu = _props$menu === void 0 ? _constants.ROOT_MENU : _props$menu,
      parentMenu = props.parentMenu,
      title = props.title;
  (0, _useNavigationTreeMenu.useNavigationTreeMenu)(props);

  var _useNavigationContext = (0, _context.useNavigationContext)(),
      activeMenu = _useNavigationContext.activeMenu;

  var isActive = activeMenu === menu;
  var classes = (0, _classnames.default)('components-navigation__menu', className);
  var context = {
    menu: menu,
    isActive: isActive
  }; // Keep the children rendered to make sure inactive items are included in the navigation tree

  if (!isActive) {
    return (0, _element.createElement)(_context2.NavigationMenuContext.Provider, {
      value: context
    }, children);
  }

  return (0, _element.createElement)(_context2.NavigationMenuContext.Provider, {
    value: context
  }, (0, _element.createElement)(_navigationStyles.MenuUI, {
    className: classes
  }, parentMenu && (0, _element.createElement)(_backButton.default, {
    backButtonLabel: backButtonLabel,
    parentMenu: parentMenu
  }), title && (0, _element.createElement)(_navigationStyles.MenuTitleUI, {
    as: "h2",
    className: "components-navigation__menu-title",
    variant: "subtitle"
  }, title), (0, _element.createElement)("ul", null, children)));
}
//# sourceMappingURL=index.js.map