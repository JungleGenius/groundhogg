{"version":3,"sources":["@wordpress/rich-text/src/unregister-format-type.js"],"names":["unregisterFormatType","name","oldFormat","getFormatType","window","console","error","removeFormatTypes"],"mappings":";;;;;;;AAGA;;AAHA;;;;AAKA;;AAEA;;;;;;;;;AASO,SAASA,oBAAT,CAA+BC,IAA/B,EAAsC;AAC5C,MAAMC,SAAS,GAAG,kBAAQ,gBAAR,EAA2BC,aAA3B,CAA0CF,IAA1C,CAAlB;;AAEA,MAAK,CAAEC,SAAP,EAAmB;AAClBE,IAAAA,MAAM,CAACC,OAAP,CAAeC,KAAf,kBAAiCL,IAAjC;AACA;AACA;;AAED,sBAAU,gBAAV,EAA6BM,iBAA7B,CAAgDN,IAAhD;AAEA,SAAOC,SAAP;AACA","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { select, dispatch } from '@wordpress/data';\n\n/** @typedef {import('./register-format-type').RichTextFormatType} RichTextFormatType */\n\n/**\n * Unregisters a format.\n *\n * @param {string} name Format name.\n *\n * @return {RichTextFormatType|undefined} The previous format value, if it has\n *                                        been successfully unregistered;\n *                                        otherwise `undefined`.\n */\nexport function unregisterFormatType( name ) {\n\tconst oldFormat = select( 'core/rich-text' ).getFormatType( name );\n\n\tif ( ! oldFormat ) {\n\t\twindow.console.error( `Format ${ name } is not registered.` );\n\t\treturn;\n\t}\n\n\tdispatch( 'core/rich-text' ).removeFormatTypes( name );\n\n\treturn oldFormat;\n}\n"]}