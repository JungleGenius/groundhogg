import { createElement } from "@wordpress/element";

/**
 * External dependencies
 */
import classnames from 'classnames';
/**
 * Internal dependencies
 */

import { ROOT_MENU } from '../constants';
import { useNavigationContext } from '../context';
import { MenuTitleUI, MenuUI } from '../styles/navigation-styles';
import NavigationBackButton from '../back-button';
import { NavigationMenuContext } from './context';
import { useNavigationTreeMenu } from './use-navigation-tree-menu';
export default function NavigationMenu(props) {
  var backButtonLabel = props.backButtonLabel,
      children = props.children,
      className = props.className,
      _props$menu = props.menu,
      menu = _props$menu === void 0 ? ROOT_MENU : _props$menu,
      parentMenu = props.parentMenu,
      title = props.title;
  useNavigationTreeMenu(props);

  var _useNavigationContext = useNavigationContext(),
      activeMenu = _useNavigationContext.activeMenu;

  var isActive = activeMenu === menu;
  var classes = classnames('components-navigation__menu', className);
  var context = {
    menu: menu,
    isActive: isActive
  }; // Keep the children rendered to make sure inactive items are included in the navigation tree

  if (!isActive) {
    return createElement(NavigationMenuContext.Provider, {
      value: context
    }, children);
  }

  return createElement(NavigationMenuContext.Provider, {
    value: context
  }, createElement(MenuUI, {
    className: classes
  }, parentMenu && createElement(NavigationBackButton, {
    backButtonLabel: backButtonLabel,
    parentMenu: parentMenu
  }), title && createElement(MenuTitleUI, {
    as: "h2",
    className: "components-navigation__menu-title",
    variant: "subtitle"
  }, title), createElement("ul", null, children)));
}
//# sourceMappingURL=index.js.map