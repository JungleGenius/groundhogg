{"version":3,"sources":["@wordpress/block-library/src/widget-area/edit/index.js"],"names":["useSelect","useDispatch","EntityProvider","Panel","PanelBody","WidgetAreaInnerBlocks","WidgetAreaEdit","clientId","className","attributes","id","name","isOpen","select","getIsWidgetAreaOpen","setIsWidgetAreaOpen","InnerBlocksContainer","props","hidden","style","display"],"mappings":";;AAAA;;;AAGA,SAASA,SAAT,EAAoBC,WAApB,QAAuC,iBAAvC;AACA,SAASC,cAAT,QAA+B,sBAA/B;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,uBAAjC;AAEA;;;;AAGA,OAAOC,qBAAP,MAAkC,gBAAlC;AAEA,eAAe,SAASC,cAAT,OAIX;AAAA,MAHHC,QAGG,QAHHA,QAGG;AAAA,MAFHC,SAEG,QAFHA,SAEG;AAAA,6BADHC,UACG;AAAA,MADWC,EACX,mBADWA,EACX;AAAA,MADeC,IACf,mBADeA,IACf;AACH,MAAMC,MAAM,GAAGZ,SAAS,CACvB,UAAEa,MAAF;AAAA,WACCA,MAAM,CAAE,mBAAF,CAAN,CAA8BC,mBAA9B,CAAmDP,QAAnD,CADD;AAAA,GADuB,EAGvB,CAAEA,QAAF,CAHuB,CAAxB;;AADG,qBAM6BN,WAAW,CAAE,mBAAF,CANxC;AAAA,MAMKc,mBANL,gBAMKA,mBANL;;AAQH,SACC,cAAC,KAAD;AAAO,IAAA,SAAS,EAAGP;AAAnB,KACC,cAAC,SAAD;AACC,IAAA,KAAK,EAAGG,IADT,CAEC;AACA;AAHD;AAIC,IAAA,MAAM,EAAG,IAJV;AAKC,IAAA,QAAQ,EAAG,oBAAM;AAChBI,MAAAA,mBAAmB,CAAER,QAAF,EAAY,CAAEK,MAAd,CAAnB;AACA,KAPF;AAQC,IAAA,SAAS,EAAGA,MAAM,GAAG,uBAAH,GAA6B;AARhD,KAUC,cAAC,cAAD;AACC,IAAA,IAAI,EAAC,MADN;AAEC,IAAA,IAAI,EAAC,UAFN;AAGC,IAAA,EAAE,wBAAmBF,EAAnB;AAHH,KAKC,cAAC,oBAAD;AAAsB,IAAA,MAAM,EAAGE;AAA/B,IALD,CAVD,CADD,CADD;AAsBA;;AAED,SAASI,oBAAT,QAA4C;AAAA,MAAXJ,MAAW,SAAXA,MAAW;AAC3C,MAAMK,KAAK,GAAGL,MAAM,GACjB,EADiB,GAEjB;AACAM,IAAAA,MAAM,EAAE,IADR;AAEA,mBAAe,IAFf;AAGAC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX;AAHP,GAFH;AAOA,SACC,qBAAUH,KAAV,EACC,cAAC,qBAAD,OADD,CADD;AAKA","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { EntityProvider } from '@wordpress/core-data';\nimport { Panel, PanelBody } from '@wordpress/components';\n\n/**\n * Internal dependencies\n */\nimport WidgetAreaInnerBlocks from './inner-blocks';\n\nexport default function WidgetAreaEdit( {\n\tclientId,\n\tclassName,\n\tattributes: { id, name },\n} ) {\n\tconst isOpen = useSelect(\n\t\t( select ) =>\n\t\t\tselect( 'core/edit-widgets' ).getIsWidgetAreaOpen( clientId ),\n\t\t[ clientId ]\n\t);\n\tconst { setIsWidgetAreaOpen } = useDispatch( 'core/edit-widgets' );\n\n\treturn (\n\t\t<Panel className={ className }>\n\t\t\t<PanelBody\n\t\t\t\ttitle={ name }\n\t\t\t\t// This workaround is required to ensure LegacyWidget blocks are not unmounted when the panel is collapsed.\n\t\t\t\t// Unmounting legacy widgets may have unintended consequences (e.g. TinyMCE not being properly reinitialized)\n\t\t\t\topened={ true }\n\t\t\t\tonToggle={ () => {\n\t\t\t\t\tsetIsWidgetAreaOpen( clientId, ! isOpen );\n\t\t\t\t} }\n\t\t\t\tclassName={ isOpen ? 'widget-area-is-opened' : '' }\n\t\t\t>\n\t\t\t\t<EntityProvider\n\t\t\t\t\tkind=\"root\"\n\t\t\t\t\ttype=\"postType\"\n\t\t\t\t\tid={ `widget-area-${ id }` }\n\t\t\t\t>\n\t\t\t\t\t<InnerBlocksContainer isOpen={ isOpen } />\n\t\t\t\t</EntityProvider>\n\t\t\t</PanelBody>\n\t\t</Panel>\n\t);\n}\n\nfunction InnerBlocksContainer( { isOpen } ) {\n\tconst props = isOpen\n\t\t? {}\n\t\t: {\n\t\t\t\thidden: true,\n\t\t\t\t'aria-hidden': true,\n\t\t\t\tstyle: { display: 'none' },\n\t\t  };\n\treturn (\n\t\t<div { ...props }>\n\t\t\t<WidgetAreaInnerBlocks />\n\t\t</div>\n\t);\n}\n"]}