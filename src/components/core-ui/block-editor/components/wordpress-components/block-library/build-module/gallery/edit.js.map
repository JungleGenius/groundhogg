{"version":3,"sources":["@wordpress/block-library/src/gallery/edit.js"],"names":["every","filter","find","forEach","get","isEmpty","map","reduce","some","toString","compose","PanelBody","SelectControl","ToggleControl","withNotices","RangeControl","MediaPlaceholder","InspectorControls","Component","Platform","__","getBlobByURL","isBlobURL","revokeBlobURL","withSelect","withViewportMatch","sharedIcon","defaultColumnsNumber","pickRelevantMediaFiles","Gallery","LINK_DESTINATION_ATTACHMENT","LINK_DESTINATION_MEDIA","LINK_DESTINATION_NONE","MAX_COLUMNS","linkOptions","value","label","ALLOWED_MEDIA_TYPES","PLACEHOLDER_TEXT","select","web","native","MOBILE_CONTROL_PROPS_RANGE_CONTROL","type","GalleryEdit","arguments","onSelectImage","bind","onSelectImages","onDeselectImage","setLinkTo","setColumnsNumber","toggleImageCrop","onMove","onMoveForward","onMoveBackward","onRemoveImage","onUploadError","setImageAttributes","setAttributes","onFocusGalleryCaption","getImagesSizeOptions","updateImagesSize","state","selectedImage","attachmentCaptions","attributes","ids","Error","images","id","parseInt","props","index","setState","oldIndex","newIndex","splice","length","img","i","columns","Math","min","newImage","newImageId","currentImage","currentImageCaption","caption","attachment","newImages","sizeSlug","selectCaption","message","noticeOperations","removeAllNotices","createErrorNotice","linkTo","imageCrop","checked","slice","imageSizes","resizedImages","slug","sizes","name","updatedImages","image","url","mediaUpload","OS","filesList","onFileChange","allowedTypes","prevProps","isSelected","captionSelected","window","wp","media","view","settings","defaultProps","link","className","noticeUI","insertBlocksAfter","hasImages","mediaPlaceholder","title","instructions","undefined","onFocus","imageSizeOptions","shouldShowSizeOptions","getImageCropHelp","getMedia","getSettings","currentResizedImages","currentSizes","size","defaultUrl","mediaDetailsUrl","isNarrow"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport {\n\tevery,\n\tfilter,\n\tfind,\n\tforEach,\n\tget,\n\tisEmpty,\n\tmap,\n\treduce,\n\tsome,\n\ttoString,\n} from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { compose } from '@wordpress/compose';\nimport {\n\tPanelBody,\n\tSelectControl,\n\tToggleControl,\n\twithNotices,\n\tRangeControl,\n} from '@wordpress/components';\nimport { MediaPlaceholder, InspectorControls } from '@wordpress/block-editor';\nimport { Component, Platform } from '@wordpress/element';\nimport { __ } from '@wordpress/i18n';\nimport { getBlobByURL, isBlobURL, revokeBlobURL } from '@wordpress/blob';\nimport { withSelect } from '@wordpress/data';\nimport { withViewportMatch } from '@wordpress/viewport';\n\n/**\n * Internal dependencies\n */\nimport { sharedIcon } from './shared-icon';\nimport { defaultColumnsNumber, pickRelevantMediaFiles } from './shared';\nimport Gallery from './gallery';\nimport {\n\tLINK_DESTINATION_ATTACHMENT,\n\tLINK_DESTINATION_MEDIA,\n\tLINK_DESTINATION_NONE,\n} from './constants';\n\nconst MAX_COLUMNS = 8;\nconst linkOptions = [\n\t{ value: LINK_DESTINATION_ATTACHMENT, label: __( 'Attachment Page' ) },\n\t{ value: LINK_DESTINATION_MEDIA, label: __( 'Media File' ) },\n\t{ value: LINK_DESTINATION_NONE, label: __( 'None' ) },\n];\nconst ALLOWED_MEDIA_TYPES = [ 'image' ];\n\nconst PLACEHOLDER_TEXT = Platform.select( {\n\tweb: __(\n\t\t'Drag images, upload new ones or select files from your library.'\n\t),\n\tnative: __( 'ADD MEDIA' ),\n} );\n\nconst MOBILE_CONTROL_PROPS_RANGE_CONTROL = Platform.select( {\n\tweb: {},\n\tnative: { type: 'stepper' },\n} );\n\nclass GalleryEdit extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\n\t\tthis.onSelectImage = this.onSelectImage.bind( this );\n\t\tthis.onSelectImages = this.onSelectImages.bind( this );\n\t\tthis.onDeselectImage = this.onDeselectImage.bind( this );\n\t\tthis.setLinkTo = this.setLinkTo.bind( this );\n\t\tthis.setColumnsNumber = this.setColumnsNumber.bind( this );\n\t\tthis.toggleImageCrop = this.toggleImageCrop.bind( this );\n\t\tthis.onMove = this.onMove.bind( this );\n\t\tthis.onMoveForward = this.onMoveForward.bind( this );\n\t\tthis.onMoveBackward = this.onMoveBackward.bind( this );\n\t\tthis.onRemoveImage = this.onRemoveImage.bind( this );\n\t\tthis.onUploadError = this.onUploadError.bind( this );\n\t\tthis.setImageAttributes = this.setImageAttributes.bind( this );\n\t\tthis.setAttributes = this.setAttributes.bind( this );\n\t\tthis.onFocusGalleryCaption = this.onFocusGalleryCaption.bind( this );\n\t\tthis.getImagesSizeOptions = this.getImagesSizeOptions.bind( this );\n\t\tthis.updateImagesSize = this.updateImagesSize.bind( this );\n\n\t\tthis.state = {\n\t\t\tselectedImage: null,\n\t\t\tattachmentCaptions: null,\n\t\t};\n\t}\n\n\tsetAttributes( attributes ) {\n\t\tif ( attributes.ids ) {\n\t\t\tthrow new Error(\n\t\t\t\t'The \"ids\" attribute should not be changed directly. It is managed automatically when \"images\" attribute changes'\n\t\t\t);\n\t\t}\n\n\t\tif ( attributes.images ) {\n\t\t\tattributes = {\n\t\t\t\t...attributes,\n\t\t\t\t// Unlike images[ n ].id which is a string, always ensure the\n\t\t\t\t// ids array contains numbers as per its attribute type.\n\t\t\t\tids: map( attributes.images, ( { id } ) => parseInt( id, 10 ) ),\n\t\t\t};\n\t\t}\n\n\t\tthis.props.setAttributes( attributes );\n\t}\n\n\tonSelectImage( index ) {\n\t\treturn () => {\n\t\t\tif ( this.state.selectedImage !== index ) {\n\t\t\t\tthis.setState( {\n\t\t\t\t\tselectedImage: index,\n\t\t\t\t} );\n\t\t\t}\n\t\t};\n\t}\n\n\tonDeselectImage( index ) {\n\t\treturn () => {\n\t\t\tif ( this.state.selectedImage === index ) {\n\t\t\t\tthis.setState( {\n\t\t\t\t\tselectedImage: null,\n\t\t\t\t} );\n\t\t\t}\n\t\t};\n\t}\n\n\tonMove( oldIndex, newIndex ) {\n\t\tconst images = [ ...this.props.attributes.images ];\n\t\timages.splice( newIndex, 1, this.props.attributes.images[ oldIndex ] );\n\t\timages.splice( oldIndex, 1, this.props.attributes.images[ newIndex ] );\n\t\tthis.setState( { selectedImage: newIndex } );\n\t\tthis.setAttributes( { images } );\n\t}\n\n\tonMoveForward( oldIndex ) {\n\t\treturn () => {\n\t\t\tif ( oldIndex === this.props.attributes.images.length - 1 ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.onMove( oldIndex, oldIndex + 1 );\n\t\t};\n\t}\n\n\tonMoveBackward( oldIndex ) {\n\t\treturn () => {\n\t\t\tif ( oldIndex === 0 ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.onMove( oldIndex, oldIndex - 1 );\n\t\t};\n\t}\n\n\tonRemoveImage( index ) {\n\t\treturn () => {\n\t\t\tconst images = filter(\n\t\t\t\tthis.props.attributes.images,\n\t\t\t\t( img, i ) => index !== i\n\t\t\t);\n\t\t\tconst { columns } = this.props.attributes;\n\t\t\tthis.setState( { selectedImage: null } );\n\t\t\tthis.setAttributes( {\n\t\t\t\timages,\n\t\t\t\tcolumns: columns ? Math.min( images.length, columns ) : columns,\n\t\t\t} );\n\t\t};\n\t}\n\n\tselectCaption( newImage, images, attachmentCaptions ) {\n\t\t// The image id in both the images and attachmentCaptions arrays is a\n\t\t// string, so ensure comparison works correctly by converting the\n\t\t// newImage.id to a string.\n\t\tconst newImageId = toString( newImage.id );\n\t\tconst currentImage = find( images, { id: newImageId } );\n\n\t\tconst currentImageCaption = currentImage\n\t\t\t? currentImage.caption\n\t\t\t: newImage.caption;\n\n\t\tif ( ! attachmentCaptions ) {\n\t\t\treturn currentImageCaption;\n\t\t}\n\n\t\tconst attachment = find( attachmentCaptions, {\n\t\t\tid: newImageId,\n\t\t} );\n\n\t\t// if the attachment caption is updated\n\t\tif ( attachment && attachment.caption !== newImage.caption ) {\n\t\t\treturn newImage.caption;\n\t\t}\n\n\t\treturn currentImageCaption;\n\t}\n\n\tonSelectImages( newImages ) {\n\t\tconst { columns, images, sizeSlug } = this.props.attributes;\n\t\tconst { attachmentCaptions } = this.state;\n\t\tthis.setState( {\n\t\t\tattachmentCaptions: newImages.map( ( newImage ) => ( {\n\t\t\t\t// Store the attachmentCaption id as a string for consistency\n\t\t\t\t// with the type of the id in the images attribute.\n\t\t\t\tid: toString( newImage.id ),\n\t\t\t\tcaption: newImage.caption,\n\t\t\t} ) ),\n\t\t} );\n\t\tthis.setAttributes( {\n\t\t\timages: newImages.map( ( newImage ) => ( {\n\t\t\t\t...pickRelevantMediaFiles( newImage, sizeSlug ),\n\t\t\t\tcaption: this.selectCaption(\n\t\t\t\t\tnewImage,\n\t\t\t\t\timages,\n\t\t\t\t\tattachmentCaptions\n\t\t\t\t),\n\t\t\t\t// The id value is stored in a data attribute, so when the\n\t\t\t\t// block is parsed it's converted to a string. Converting\n\t\t\t\t// to a string here ensures it's type is consistent.\n\t\t\t\tid: toString( newImage.id ),\n\t\t\t} ) ),\n\t\t\tcolumns: columns ? Math.min( newImages.length, columns ) : columns,\n\t\t} );\n\t}\n\n\tonUploadError( message ) {\n\t\tconst { noticeOperations } = this.props;\n\t\tnoticeOperations.removeAllNotices();\n\t\tnoticeOperations.createErrorNotice( message );\n\t}\n\n\tsetLinkTo( value ) {\n\t\tthis.setAttributes( { linkTo: value } );\n\t}\n\n\tsetColumnsNumber( value ) {\n\t\tthis.setAttributes( { columns: value } );\n\t}\n\n\ttoggleImageCrop() {\n\t\tthis.setAttributes( { imageCrop: ! this.props.attributes.imageCrop } );\n\t}\n\n\tgetImageCropHelp( checked ) {\n\t\treturn checked\n\t\t\t? __( 'Thumbnails are cropped to align.' )\n\t\t\t: __( 'Thumbnails are not cropped.' );\n\t}\n\n\tonFocusGalleryCaption() {\n\t\tthis.setState( {\n\t\t\tselectedImage: null,\n\t\t} );\n\t}\n\n\tsetImageAttributes( index, attributes ) {\n\t\tconst {\n\t\t\tattributes: { images },\n\t\t} = this.props;\n\t\tconst { setAttributes } = this;\n\t\tif ( ! images[ index ] ) {\n\t\t\treturn;\n\t\t}\n\t\tsetAttributes( {\n\t\t\timages: [\n\t\t\t\t...images.slice( 0, index ),\n\t\t\t\t{\n\t\t\t\t\t...images[ index ],\n\t\t\t\t\t...attributes,\n\t\t\t\t},\n\t\t\t\t...images.slice( index + 1 ),\n\t\t\t],\n\t\t} );\n\t}\n\n\tgetImagesSizeOptions() {\n\t\tconst { imageSizes, resizedImages } = this.props;\n\t\treturn map(\n\t\t\tfilter( imageSizes, ( { slug } ) =>\n\t\t\t\tsome( resizedImages, ( sizes ) => sizes[ slug ] )\n\t\t\t),\n\t\t\t( { name, slug } ) => ( { value: slug, label: name } )\n\t\t);\n\t}\n\n\tupdateImagesSize( sizeSlug ) {\n\t\tconst {\n\t\t\tattributes: { images },\n\t\t\tresizedImages,\n\t\t} = this.props;\n\n\t\tconst updatedImages = map( images, ( image ) => {\n\t\t\tif ( ! image.id ) {\n\t\t\t\treturn image;\n\t\t\t}\n\t\t\tconst url = get( resizedImages, [\n\t\t\t\tparseInt( image.id, 10 ),\n\t\t\t\tsizeSlug,\n\t\t\t] );\n\t\t\treturn {\n\t\t\t\t...image,\n\t\t\t\t...( url && { url } ),\n\t\t\t};\n\t\t} );\n\n\t\tthis.setAttributes( { images: updatedImages, sizeSlug } );\n\t}\n\n\tcomponentDidMount() {\n\t\tconst { attributes, mediaUpload } = this.props;\n\t\tconst { images } = attributes;\n\t\tif (\n\t\t\tPlatform.OS === 'web' &&\n\t\t\timages &&\n\t\t\timages.length > 0 &&\n\t\t\tevery( images, ( { url } ) => isBlobURL( url ) )\n\t\t) {\n\t\t\tconst filesList = map( images, ( { url } ) => getBlobByURL( url ) );\n\t\t\tforEach( images, ( { url } ) => revokeBlobURL( url ) );\n\t\t\tmediaUpload( {\n\t\t\t\tfilesList,\n\t\t\t\tonFileChange: this.onSelectImages,\n\t\t\t\tallowedTypes: [ 'image' ],\n\t\t\t} );\n\t\t}\n\t}\n\n\tcomponentDidUpdate( prevProps ) {\n\t\t// Deselect images when deselecting the block\n\t\tif ( ! this.props.isSelected && prevProps.isSelected ) {\n\t\t\tthis.setState( {\n\t\t\t\tselectedImage: null,\n\t\t\t\tcaptionSelected: false,\n\t\t\t} );\n\t\t}\n\t\t// linkTo attribute must be saved so blocks don't break when changing image_default_link_type in options.php\n\t\tif ( ! this.props.attributes.linkTo ) {\n\t\t\tthis.setAttributes( {\n\t\t\t\tlinkTo:\n\t\t\t\t\twindow?.wp?.media?.view?.settings?.defaultProps?.link ||\n\t\t\t\t\tLINK_DESTINATION_NONE,\n\t\t\t} );\n\t\t}\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tattributes,\n\t\t\tclassName,\n\t\t\tisSelected,\n\t\t\tnoticeUI,\n\t\t\tinsertBlocksAfter,\n\t\t} = this.props;\n\t\tconst {\n\t\t\tcolumns = defaultColumnsNumber( attributes ),\n\t\t\timageCrop,\n\t\t\timages,\n\t\t\tlinkTo,\n\t\t\tsizeSlug,\n\t\t} = attributes;\n\n\t\tconst hasImages = !! images.length;\n\n\t\tconst mediaPlaceholder = (\n\t\t\t<MediaPlaceholder\n\t\t\t\taddToGallery={ hasImages }\n\t\t\t\tisAppender={ hasImages }\n\t\t\t\tclassName={ className }\n\t\t\t\tdisableMediaButtons={ hasImages && ! isSelected }\n\t\t\t\ticon={ ! hasImages && sharedIcon }\n\t\t\t\tlabels={ {\n\t\t\t\t\ttitle: ! hasImages && __( 'Gallery' ),\n\t\t\t\t\tinstructions: ! hasImages && PLACEHOLDER_TEXT,\n\t\t\t\t} }\n\t\t\t\tonSelect={ this.onSelectImages }\n\t\t\t\taccept=\"image/*\"\n\t\t\t\tallowedTypes={ ALLOWED_MEDIA_TYPES }\n\t\t\t\tmultiple\n\t\t\t\tvalue={ images }\n\t\t\t\tonError={ this.onUploadError }\n\t\t\t\tnotices={ hasImages ? undefined : noticeUI }\n\t\t\t\tonFocus={ this.props.onFocus }\n\t\t\t/>\n\t\t);\n\n\t\tif ( ! hasImages ) {\n\t\t\treturn mediaPlaceholder;\n\t\t}\n\n\t\tconst imageSizeOptions = this.getImagesSizeOptions();\n\t\tconst shouldShowSizeOptions =\n\t\t\thasImages && ! isEmpty( imageSizeOptions );\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<InspectorControls>\n\t\t\t\t\t<PanelBody title={ __( 'Gallery settings' ) }>\n\t\t\t\t\t\t{ images.length > 1 && (\n\t\t\t\t\t\t\t<RangeControl\n\t\t\t\t\t\t\t\tlabel={ __( 'Columns' ) }\n\t\t\t\t\t\t\t\tvalue={ columns }\n\t\t\t\t\t\t\t\tonChange={ this.setColumnsNumber }\n\t\t\t\t\t\t\t\tmin={ 1 }\n\t\t\t\t\t\t\t\tmax={ Math.min( MAX_COLUMNS, images.length ) }\n\t\t\t\t\t\t\t\t{ ...MOBILE_CONTROL_PROPS_RANGE_CONTROL }\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) }\n\n\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\tlabel={ __( 'Crop images' ) }\n\t\t\t\t\t\t\tchecked={ !! imageCrop }\n\t\t\t\t\t\t\tonChange={ this.toggleImageCrop }\n\t\t\t\t\t\t\thelp={ this.getImageCropHelp }\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<SelectControl\n\t\t\t\t\t\t\tlabel={ __( 'Link to' ) }\n\t\t\t\t\t\t\tvalue={ linkTo }\n\t\t\t\t\t\t\tonChange={ this.setLinkTo }\n\t\t\t\t\t\t\toptions={ linkOptions }\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{ shouldShowSizeOptions && (\n\t\t\t\t\t\t\t<SelectControl\n\t\t\t\t\t\t\t\tlabel={ __( 'Image size' ) }\n\t\t\t\t\t\t\t\tvalue={ sizeSlug }\n\t\t\t\t\t\t\t\toptions={ imageSizeOptions }\n\t\t\t\t\t\t\t\tonChange={ this.updateImagesSize }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) }\n\t\t\t\t\t</PanelBody>\n\t\t\t\t</InspectorControls>\n\t\t\t\t{ noticeUI }\n\t\t\t\t<Gallery\n\t\t\t\t\t{ ...this.props }\n\t\t\t\t\tselectedImage={ this.state.selectedImage }\n\t\t\t\t\tmediaPlaceholder={ mediaPlaceholder }\n\t\t\t\t\tonMoveBackward={ this.onMoveBackward }\n\t\t\t\t\tonMoveForward={ this.onMoveForward }\n\t\t\t\t\tonRemoveImage={ this.onRemoveImage }\n\t\t\t\t\tonSelectImage={ this.onSelectImage }\n\t\t\t\t\tonDeselectImage={ this.onDeselectImage }\n\t\t\t\t\tonSetImageAttributes={ this.setImageAttributes }\n\t\t\t\t\tonFocusGalleryCaption={ this.onFocusGalleryCaption }\n\t\t\t\t\tinsertBlocksAfter={ insertBlocksAfter }\n\t\t\t\t/>\n\t\t\t</>\n\t\t);\n\t}\n}\nexport default compose( [\n\twithSelect( ( select, { attributes: { ids }, isSelected } ) => {\n\t\tconst { getMedia } = select( 'core' );\n\t\tconst { getSettings } = select( 'core/block-editor' );\n\t\tconst { imageSizes, mediaUpload } = getSettings();\n\n\t\tlet resizedImages = {};\n\n\t\tif ( isSelected ) {\n\t\t\tresizedImages = reduce(\n\t\t\t\tids,\n\t\t\t\t( currentResizedImages, id ) => {\n\t\t\t\t\tif ( ! id ) {\n\t\t\t\t\t\treturn currentResizedImages;\n\t\t\t\t\t}\n\t\t\t\t\tconst image = getMedia( id );\n\t\t\t\t\tconst sizes = reduce(\n\t\t\t\t\t\timageSizes,\n\t\t\t\t\t\t( currentSizes, size ) => {\n\t\t\t\t\t\t\tconst defaultUrl = get( image, [\n\t\t\t\t\t\t\t\t'sizes',\n\t\t\t\t\t\t\t\tsize.slug,\n\t\t\t\t\t\t\t\t'url',\n\t\t\t\t\t\t\t] );\n\t\t\t\t\t\t\tconst mediaDetailsUrl = get( image, [\n\t\t\t\t\t\t\t\t'media_details',\n\t\t\t\t\t\t\t\t'sizes',\n\t\t\t\t\t\t\t\tsize.slug,\n\t\t\t\t\t\t\t\t'source_url',\n\t\t\t\t\t\t\t] );\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t...currentSizes,\n\t\t\t\t\t\t\t\t[ size.slug ]: defaultUrl || mediaDetailsUrl,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{}\n\t\t\t\t\t);\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...currentResizedImages,\n\t\t\t\t\t\t[ parseInt( id, 10 ) ]: sizes,\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\t{}\n\t\t\t);\n\t\t}\n\n\t\treturn {\n\t\t\timageSizes,\n\t\t\tmediaUpload,\n\t\t\tresizedImages,\n\t\t};\n\t} ),\n\twithNotices,\n\twithViewportMatch( { isNarrow: '< small' } ),\n] )( GalleryEdit );\n"]}