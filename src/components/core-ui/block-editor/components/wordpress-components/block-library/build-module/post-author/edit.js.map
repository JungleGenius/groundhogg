{"version":3,"sources":["@wordpress/block-library/src/post-author/edit.js"],"names":["forEach","classnames","AlignmentToolbar","BlockControls","InspectorControls","RichText","__experimentalUseBlockWrapperProps","useBlockWrapperProps","PanelBody","SelectControl","ToggleControl","useSelect","useDispatch","__","PostAuthorEdit","isSelected","context","attributes","setAttributes","postType","postId","select","getEditedEntityRecord","getUser","getUsers","_authorId","author","authorId","authorDetails","authors","who","editEntityRecord","textAlign","showAvatar","showBio","byline","avatarSizes","avatar_urls","url","size","push","value","label","blockWrapperProps","className","map","id","name","nextAuthorId","avatarSize","Number","nextAlign","isEmpty","description"],"mappings":";;;AAAA;;;AAGA,SAASA,OAAT,QAAwB,QAAxB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA;;;;AAGA,SACCC,gBADD,EAECC,aAFD,EAGCC,iBAHD,EAICC,QAJD,EAKCC,kCAAkC,IAAIC,oBALvC,QAMO,yBANP;AAOA,SAASC,SAAT,EAAoBC,aAApB,EAAmCC,aAAnC,QAAwD,uBAAxD;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,iBAAvC;AACA,SAASC,EAAT,QAAmB,iBAAnB;;AAEA,SAASC,cAAT,OAA8E;AAAA,MAAnDC,UAAmD,QAAnDA,UAAmD;AAAA,MAAvCC,OAAuC,QAAvCA,OAAuC;AAAA,MAA9BC,UAA8B,QAA9BA,UAA8B;AAAA,MAAlBC,aAAkB,QAAlBA,aAAkB;AAAA,MACrEC,QADqE,GAChDH,OADgD,CACrEG,QADqE;AAAA,MAC3DC,MAD2D,GAChDJ,OADgD,CAC3DI,MAD2D;;AAAA,mBAGhCT,SAAS,CACrD,UAAEU,MAAF,EAAc;AAAA;;AAAA,kBACwCA,MAAM,CAC1D,MAD0D,CAD9C;AAAA,QACLC,qBADK,WACLA,qBADK;AAAA,QACkBC,OADlB,WACkBA,OADlB;AAAA,QAC2BC,QAD3B,WAC2BA,QAD3B;;AAIb,QAAMC,SAAS,4BAAGH,qBAAqB,CACtC,UADsC,EAEtCH,QAFsC,EAGtCC,MAHsC,CAAxB,0DAAG,sBAIfM,MAJH;;AAMA,WAAO;AACNC,MAAAA,QAAQ,EAAEF,SADJ;AAENG,MAAAA,aAAa,EAAEH,SAAS,GAAGF,OAAO,CAAEE,SAAF,CAAV,GAA0B,IAF5C;AAGNI,MAAAA,OAAO,EAAEL,QAAQ,CAAE;AAAEM,QAAAA,GAAG,EAAE;AAAP,OAAF;AAHX,KAAP;AAKA,GAhBoD,EAiBrD,CAAEX,QAAF,EAAYC,MAAZ,CAjBqD,CAHuB;AAAA,MAGrEO,QAHqE,cAGrEA,QAHqE;AAAA,MAG3DC,aAH2D,cAG3DA,aAH2D;AAAA,MAG5CC,OAH4C,cAG5CA,OAH4C;;AAAA,qBAuBhDjB,WAAW,CAAE,MAAF,CAvBqC;AAAA,MAuBrEmB,gBAvBqE,gBAuBrEA,gBAvBqE;;AAAA,MAyBrEC,SAzBqE,GAyB1Bf,UAzB0B,CAyBrEe,SAzBqE;AAAA,MAyB1DC,UAzB0D,GAyB1BhB,UAzB0B,CAyB1DgB,UAzB0D;AAAA,MAyB9CC,OAzB8C,GAyB1BjB,UAzB0B,CAyB9CiB,OAzB8C;AAAA,MAyBrCC,MAzBqC,GAyB1BlB,UAzB0B,CAyBrCkB,MAzBqC;AA2B7E,MAAMC,WAAW,GAAG,EAApB;;AACA,MAAKR,aAAL,EAAqB;AACpB5B,IAAAA,OAAO,CAAE4B,aAAa,CAACS,WAAhB,EAA6B,UAAEC,GAAF,EAAOC,IAAP,EAAiB;AACpDH,MAAAA,WAAW,CAACI,IAAZ,CAAkB;AACjBC,QAAAA,KAAK,EAAEF,IADU;AAEjBG,QAAAA,KAAK,YAAMH,IAAN,gBAAkBA,IAAlB;AAFY,OAAlB;AAIA,KALM,CAAP;AAMA;;AAED,MAAMI,iBAAiB,GAAGpC,oBAAoB,CAAE;AAC/CqC,IAAAA,SAAS,EAAE3C,UAAU,8CACC+B,SADD,GACiBA,SADjB;AAD0B,GAAF,CAA9C;AAMA,SACC,8BACC,cAAC,iBAAD,QACC,cAAC,SAAD;AAAW,IAAA,KAAK,EAAGnB,EAAE,CAAE,iBAAF;AAArB,KACC,cAAC,aAAD;AACC,IAAA,KAAK,EAAGA,EAAE,CAAE,QAAF,CADX;AAEC,IAAA,KAAK,EAAGc,QAFT;AAGC,IAAA,OAAO,EAAGE,OAAO,CAACgB,GAAR,CAAa,iBAAoB;AAAA,UAAhBC,EAAgB,SAAhBA,EAAgB;AAAA,UAAZC,IAAY,SAAZA,IAAY;AAC1C,aAAO;AACNN,QAAAA,KAAK,EAAEK,EADD;AAENJ,QAAAA,KAAK,EAAEK;AAFD,OAAP;AAIA,KALS,CAHX;AASC,IAAA,QAAQ,EAAG,kBAAEC,YAAF,EAAoB;AAC9BjB,MAAAA,gBAAgB,CAAE,UAAF,EAAcZ,QAAd,EAAwBC,MAAxB,EAAgC;AAC/CM,QAAAA,MAAM,EAAEsB;AADuC,OAAhC,CAAhB;AAGA;AAbF,IADD,EAgBC,cAAC,aAAD;AACC,IAAA,KAAK,EAAGnC,EAAE,CAAE,aAAF,CADX;AAEC,IAAA,OAAO,EAAGoB,UAFX;AAGC,IAAA,QAAQ,EAAG;AAAA,aACVf,aAAa,CAAE;AAAEe,QAAAA,UAAU,EAAE,CAAEA;AAAhB,OAAF,CADH;AAAA;AAHZ,IAhBD,EAuBGA,UAAU,IACX,cAAC,aAAD;AACC,IAAA,KAAK,EAAGpB,EAAE,CAAE,aAAF,CADX;AAEC,IAAA,KAAK,EAAGI,UAAU,CAACgC,UAFpB;AAGC,IAAA,OAAO,EAAGb,WAHX;AAIC,IAAA,QAAQ,EAAG,kBAAEG,IAAF,EAAY;AACtBrB,MAAAA,aAAa,CAAE;AACd+B,QAAAA,UAAU,EAAEC,MAAM,CAAEX,IAAF;AADJ,OAAF,CAAb;AAGA;AARF,IAxBF,EAmCC,cAAC,aAAD;AACC,IAAA,KAAK,EAAG1B,EAAE,CAAE,UAAF,CADX;AAEC,IAAA,OAAO,EAAGqB,OAFX;AAGC,IAAA,QAAQ,EAAG;AAAA,aACVhB,aAAa,CAAE;AAAEgB,QAAAA,OAAO,EAAE,CAAEA;AAAb,OAAF,CADH;AAAA;AAHZ,IAnCD,CADD,CADD,EA+CC,cAAC,aAAD,QACC,cAAC,gBAAD;AACC,IAAA,KAAK,EAAGF,SADT;AAEC,IAAA,QAAQ,EAAG,kBAAEmB,SAAF,EAAiB;AAC3BjC,MAAAA,aAAa,CAAE;AAAEc,QAAAA,SAAS,EAAEmB;AAAb,OAAF,CAAb;AACA;AAJF,IADD,CA/CD,EAwDC,qBAAUR,iBAAV,EACGV,UAAU,IAAIL,aAAd,IACD;AAAK,IAAA,SAAS,EAAC;AAAf,KACC;AACC,IAAA,KAAK,EAAGX,UAAU,CAACgC,UADpB;AAEC,IAAA,GAAG,EACFrB,aAAa,CAACS,WAAd,CACCpB,UAAU,CAACgC,UADZ,CAHF;AAOC,IAAA,GAAG,EAAGrB,aAAa,CAACmB;AAPrB,IADD,CAFF,EAcC;AAAK,IAAA,SAAS,EAAC;AAAf,KACG,CAAE,CAAE1C,QAAQ,CAAC+C,OAAT,CAAkBjB,MAAlB,CAAF,IAAgCpB,UAAlC,KACD,cAAC,QAAD;AACC,IAAA,SAAS,EAAC,8BADX;AAEC,IAAA,SAAS,EAAG,KAFb;AAGC,IAAA,WAAW,EAAGF,EAAE,CAAE,gBAAF,CAHjB;AAIC,IAAA,KAAK,EAAGsB,MAJT;AAKC,IAAA,QAAQ,EAAG,kBAAEM,KAAF;AAAA,aACVvB,aAAa,CAAE;AAAEiB,QAAAA,MAAM,EAAEM;AAAV,OAAF,CADH;AAAA;AALZ,IAFF,EAYC;AAAG,IAAA,SAAS,EAAC;AAAb,KACG,CAAAb,aAAa,SAAb,IAAAA,aAAa,WAAb,YAAAA,aAAa,CAAEmB,IAAf,KAAuBlC,EAAE,CAAE,aAAF,CAD5B,CAZD,EAeGqB,OAAO,IACR;AAAG,IAAA,SAAS,EAAC;AAAb,KACGN,aADH,aACGA,aADH,uBACGA,aAAa,CAAEyB,WADlB,CAhBF,CAdD,CAxDD,CADD;AA+FA;;AAED,eAAevC,cAAf","sourcesContent":["/**\n * External dependencies\n */\nimport { forEach } from 'lodash';\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport {\n\tAlignmentToolbar,\n\tBlockControls,\n\tInspectorControls,\n\tRichText,\n\t__experimentalUseBlockWrapperProps as useBlockWrapperProps,\n} from '@wordpress/block-editor';\nimport { PanelBody, SelectControl, ToggleControl } from '@wordpress/components';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { __ } from '@wordpress/i18n';\n\nfunction PostAuthorEdit( { isSelected, context, attributes, setAttributes } ) {\n\tconst { postType, postId } = context;\n\n\tconst { authorId, authorDetails, authors } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getEditedEntityRecord, getUser, getUsers } = select(\n\t\t\t\t'core'\n\t\t\t);\n\t\t\tconst _authorId = getEditedEntityRecord(\n\t\t\t\t'postType',\n\t\t\t\tpostType,\n\t\t\t\tpostId\n\t\t\t)?.author;\n\n\t\t\treturn {\n\t\t\t\tauthorId: _authorId,\n\t\t\t\tauthorDetails: _authorId ? getUser( _authorId ) : null,\n\t\t\t\tauthors: getUsers( { who: 'authors' } ),\n\t\t\t};\n\t\t},\n\t\t[ postType, postId ]\n\t);\n\n\tconst { editEntityRecord } = useDispatch( 'core' );\n\n\tconst { textAlign, showAvatar, showBio, byline } = attributes;\n\n\tconst avatarSizes = [];\n\tif ( authorDetails ) {\n\t\tforEach( authorDetails.avatar_urls, ( url, size ) => {\n\t\t\tavatarSizes.push( {\n\t\t\t\tvalue: size,\n\t\t\t\tlabel: `${ size } x ${ size }`,\n\t\t\t} );\n\t\t} );\n\t}\n\n\tconst blockWrapperProps = useBlockWrapperProps( {\n\t\tclassName: classnames( {\n\t\t\t[ `has-text-align-${ textAlign }` ]: textAlign,\n\t\t} ),\n\t} );\n\n\treturn (\n\t\t<>\n\t\t\t<InspectorControls>\n\t\t\t\t<PanelBody title={ __( 'Author Settings' ) }>\n\t\t\t\t\t<SelectControl\n\t\t\t\t\t\tlabel={ __( 'Author' ) }\n\t\t\t\t\t\tvalue={ authorId }\n\t\t\t\t\t\toptions={ authors.map( ( { id, name } ) => {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tvalue: id,\n\t\t\t\t\t\t\t\tlabel: name,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t} ) }\n\t\t\t\t\t\tonChange={ ( nextAuthorId ) => {\n\t\t\t\t\t\t\teditEntityRecord( 'postType', postType, postId, {\n\t\t\t\t\t\t\t\tauthor: nextAuthorId,\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} }\n\t\t\t\t\t/>\n\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\tlabel={ __( 'Show avatar' ) }\n\t\t\t\t\t\tchecked={ showAvatar }\n\t\t\t\t\t\tonChange={ () =>\n\t\t\t\t\t\t\tsetAttributes( { showAvatar: ! showAvatar } )\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t{ showAvatar && (\n\t\t\t\t\t\t<SelectControl\n\t\t\t\t\t\t\tlabel={ __( 'Avatar size' ) }\n\t\t\t\t\t\t\tvalue={ attributes.avatarSize }\n\t\t\t\t\t\t\toptions={ avatarSizes }\n\t\t\t\t\t\t\tonChange={ ( size ) => {\n\t\t\t\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\t\t\t\tavatarSize: Number( size ),\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\tlabel={ __( 'Show bio' ) }\n\t\t\t\t\t\tchecked={ showBio }\n\t\t\t\t\t\tonChange={ () =>\n\t\t\t\t\t\t\tsetAttributes( { showBio: ! showBio } )\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t</PanelBody>\n\t\t\t</InspectorControls>\n\n\t\t\t<BlockControls>\n\t\t\t\t<AlignmentToolbar\n\t\t\t\t\tvalue={ textAlign }\n\t\t\t\t\tonChange={ ( nextAlign ) => {\n\t\t\t\t\t\tsetAttributes( { textAlign: nextAlign } );\n\t\t\t\t\t} }\n\t\t\t\t/>\n\t\t\t</BlockControls>\n\n\t\t\t<div { ...blockWrapperProps }>\n\t\t\t\t{ showAvatar && authorDetails && (\n\t\t\t\t\t<div className=\"wp-block-post-author__avatar\">\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\twidth={ attributes.avatarSize }\n\t\t\t\t\t\t\tsrc={\n\t\t\t\t\t\t\t\tauthorDetails.avatar_urls[\n\t\t\t\t\t\t\t\t\tattributes.avatarSize\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\talt={ authorDetails.name }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t) }\n\t\t\t\t<div className=\"wp-block-post-author__content\">\n\t\t\t\t\t{ ( ! RichText.isEmpty( byline ) || isSelected ) && (\n\t\t\t\t\t\t<RichText\n\t\t\t\t\t\t\tclassName=\"wp-block-post-author__byline\"\n\t\t\t\t\t\t\tmultiline={ false }\n\t\t\t\t\t\t\tplaceholder={ __( 'Write byline â€¦' ) }\n\t\t\t\t\t\t\tvalue={ byline }\n\t\t\t\t\t\t\tonChange={ ( value ) =>\n\t\t\t\t\t\t\t\tsetAttributes( { byline: value } )\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t\t<p className=\"wp-block-post-author__name\">\n\t\t\t\t\t\t{ authorDetails?.name || __( 'Post Author' ) }\n\t\t\t\t\t</p>\n\t\t\t\t\t{ showBio && (\n\t\t\t\t\t\t<p className=\"wp-block-post-author__bio\">\n\t\t\t\t\t\t\t{ authorDetails?.description }\n\t\t\t\t\t\t</p>\n\t\t\t\t\t) }\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nexport default PostAuthorEdit;\n"]}