($=>{const{modal:modal,errorDialog:errorDialog,loadingDots:loadingDots,select:select,uuid:uuid,addMediaToBasicTinyMCE:addMediaToBasicTinyMCE,specialChars:specialChars,tinymceElement:tinymceElement,input:input,icons:icons,dialog:dialog,tooltip:tooltip,isValidEmail:isValidEmail,textarea:textarea}=Groundhogg.element;const{contacts:ContactsStore,tags:TagsStore,forms:FormsStore}=Groundhogg.stores;const{post:post,routes:routes}=Groundhogg.api;const{tagPicker:tagPicker}=Groundhogg.pickers;const{sprintf:sprintf,__:__,_x:_x,_n:_n}=wp.i18n;const{formatNumber:formatNumber,formatTime:formatTime,formatDate:formatDate,formatDateTime:formatDateTime}=Groundhogg.formatting;const{currentUser:currentUser}=Groundhogg;const selectContactModal=({onSelect:onSelect=(()=>{}),exclude:exclude=[]})=>{let search,timeout,results;const form=()=>`\n\t\t  <div id="search-form">\n\t\t\t  ${input({id:"contact-search",value:search,type:"search",placeholder:__("Search by name or email","groundhogg")})}\n\t\t  </div>\n\t\t  <div id="search-results">\n\t\t\t  <table>\n\t\t\t\t  <tbody></tbody>\n\t\t\t  </table>\n\t\t  </div>`;const{close:close,setContent:setContent}=modal({content:form(),dialogClasses:"no-padding"});const renderResult=contact=>`\n\t\t  <tr data-id="${contact.ID}">\n\t\t\t  <td><img src="${contact.data.gravatar}" alt="${contact.data.full_name}"></td>\n\t\t\t  <td><b>${contact.data.full_name}</b><br/>${contact.data.email}</td>\n\t\t\t  <td>\n\t\t\t\t  <button class="select-contact gh-button primary text" data-id="${contact.ID}">${__("Select")}</button>\n\t\t\t  </td>\n\t\t  </tr>`;const noResults=()=>`\n\t\t  <tr>\n\t\t\t  <td colspan="3"><p>${__("No contacts match that search...","groundhogg")}</p></td>\n\t\t  </tr>`;const onMount=()=>{const setSearchResults=results=>{if(!results.length){$("#search-results table tbody").html(noResults());return}$("#search-results table tbody").html(results.map((r=>renderResult(r))).join(""));$("#search-results tr, .select-contact").on("click",(e=>{close();onSelect(ContactsStore.get(parseInt(e.currentTarget.dataset.id)))}))};const getResults=()=>{ContactsStore.fetchItems({search:search,exclude:exclude,limit:10}).then((items=>{results=items;setSearchResults(results)}))};$("#contact-search").on("input change",(e=>{search=e.target.value;if(timeout){clearTimeout(timeout)}setTimeout((()=>{getResults()}),1e3)})).focus();if(ContactsStore.hasItems()){setSearchResults(ContactsStore.getItems())}else{getResults()}};onMount()};const quickEditContactModal=({contact:contact,prefix:prefix="quick-edit",onEdit:onEdit=(contact=>{})})=>{if(contact&&contact.tags){TagsStore.itemsFetched(contact.tags)}const getContact=()=>ContactsStore.get(contact.ID);const quickEdit=contact=>`\n\t\t  <div class="contact-quick-edit" tabindex="0">\n\t\t\t  <div class="gh-header space-between">\n\t\t\t\t  <div class="align-left-space-between">\n\t\t\t\t\t  <img height="40" width="40" src="${contact.data.gravatar}" alt="avatar"/>\n\t\t\t\t\t  <h3 class="contact-name">\n\t\t\t\t\t\t  ${specialChars(`${contact.data.first_name} ${contact.data.last_name}`)}</h3>\n\t\t\t\t  </div>\n\t\t\t\t  <div class="actions align-right-space-between">\n\t\t\t\t\t  <a class="gh-button secondary"\n\t\t\t\t\t     href="${contact.admin}">${__("Edit Full Profile","groundhogg")}</a>\n\t\t\t\t\t  <button class="gh-button dashicon no-border icon text ${prefix}-cancel"><span\n\t\t\t\t\t\t  class="dashicons dashicons-no-alt"></span></button>\n\t\t\t\t  </div>\n\t\t\t  </div>\n\t\t\t  <div class="contact-quick-edit-fields">\n\t\t\t\t  <div class="row">\n\t\t\t\t\t  <div class="col">\n\t\t\t\t\t\t  <label for="${prefix}-first-name">${__("First Name","groundhogg")}</label>\n\t\t\t\t\t\t  ${input({id:`${prefix}-first-name`,name:"first_name",value:contact.data.first_name})}\n\t\t\t\t\t  </div>\n\t\t\t\t\t  <div class="col">\n\t\t\t\t\t\t  <label for="${prefix}-last-name">${__("Last Name","groundhogg")}</label>\n\t\t\t\t\t\t  ${input({id:`${prefix}-last-name`,name:"last_name",value:contact.data.last_name})}\n\t\t\t\t\t  </div>\n\t\t\t\t  </div>\n\t\t\t\t  <div class="row">\n\t\t\t\t\t  <div class="col">\n\t\t\t\t\t\t  <label for="${prefix}-email">${__("Email Address","groundhogg")}</label>\n\t\t\t\t\t\t  ${input({type:"email",name:"email",id:`${prefix}-email`,value:contact.data.email})}\n\t\t\t\t\t  </div>\n\t\t\t\t\t  <div class="col">\n\t\t\t\t\t\t  <div class="row phone">\n\t\t\t\t\t\t\t  <div class="col">\n\t\t\t\t\t\t\t\t  <label for="${prefix}-primary-phone">${__("Primary Phone","groundhogg")}</label>\n\t\t\t\t\t\t\t\t  ${input({type:"tel",id:`${prefix}-primary-phone`,name:"primary_phone",value:contact.meta.primary_phone})}\n\t\t\t\t\t\t\t  </div>\n\t\t\t\t\t\t\t  <div class="primary-phone-ext">\n\t\t\t\t\t\t\t\t  <label\n\t\t\t\t\t\t\t\t\t  for="${prefix}-primary-phone-extension">${_x("Ext.","phone number extension","groundhogg")}</label>\n\t\t\t\t\t\t\t\t  ${input({type:"number",id:`${prefix}-primary-phone-extension`,name:"primary_phone_extension",value:contact.meta.primary_phone_extension})}\n\t\t\t\t\t\t\t  </div>\n\t\t\t\t\t\t  </div>\n\t\t\t\t\t  </div>\n\t\t\t\t  </div>\n\t\t\t\t  <div class="row">\n\t\t\t\t\t  <div class="col">\n\t\t\t\t\t\t  <label for="${prefix}-email">${__("Optin Status","groundhogg")}</label>\n\t\t\t\t\t\t  ${select({id:`${prefix}-optin-status`,name:"optin_status"},Groundhogg.filters.optin_status,contact.data.optin_status)}\n\t\t\t\t\t  </div>\n\t\t\t\t\t  <div class="col">\n\t\t\t\t\t\t  <label for="${prefix}-mobile-phone">${__("Mobile Phone","groundhogg")}</label>\n\t\t\t\t\t\t  ${input({type:"tel",id:`${prefix}-mobile-phone`,name:"mobile_phone",value:contact.meta.mobile_phone})}\n\t\t\t\t\t  </div>\n\t\t\t\t  </div>\n\t\t\t\t  <div class="row">\n\t\t\t\t\t  <div class="col">\n\t\t\t\t\t\t  <label for="${prefix}-owner">${__("Owner","noun the contact owner","groundhogg")}</label>\n\t\t\t\t\t\t  ${select({id:`${prefix}-owner`,name:"owner_id"},Groundhogg.filters.owners.map((u=>({text:u.data.user_email,value:u.ID}))),contact.data.owner_id)}\n\t\t\t\t\t  </div>\n\t\t\t\t\t  <div class="col">\n\t\t\t\t\t\t  <label for="${prefix}-tags">${__("Tags","groundhogg")}</label>\n\t\t\t\t\t\t  ${select({id:`${prefix}-tags`,multiple:true})}\n\t\t\t\t\t  </div>\n\t\t\t\t  </div>\n\t\t\t  </div>\n\t\t\t  <div class="align-right-space-between" style="margin-top: 20px">\n\t\t\t\t  <button class="gh-button text danger ${prefix}-cancel">${__("Cancel","groundhogg")}</button>\n\t\t\t\t  <button class="gh-button primary" id="${prefix}-save">${__("Save Changes","groundhogg")}</button>\n\t\t\t  </div>\n\t\t  </div>`;const quickEditMounted=({close:close,setContent:setContent})=>{let payload;const clearPayload=()=>{payload={data:{},meta:{},add_tags:[],remove_tags:[]}};clearPayload();const updateContact=data=>{payload={...data,data:{...payload.data,...data.data},meta:{...payload.meta,...data.meta}}};const $quickEdit=$(".contact-quick-edit");$quickEdit.focus();$(`#${prefix}-save`).on("click",(e=>{const $btn=$(e.target);$btn.prop("disabled",true);$btn.text(__("Saving","groundhogg"));const{stop:stop}=loadingDots(`#${prefix}-save`);ContactsStore.patch(contact.ID,payload).then((c=>{stop();clearPayload();onEdit(c);setContent(quickEdit(getContact()));quickEditMounted({close:close,setContent:setContent})}))}));$(`.${prefix}-cancel`).on("click",(e=>{clearPayload();close()}));tagPicker(`#${prefix}-tags`,true,(items=>{TagsStore.itemsFetched(items)}),{data:getContact().tags.map((t=>({id:t.ID,text:t.data.tag_name,selected:true})))}).on("select2:unselect",(e=>{updateContact({add_tags:payload.add_tags.filter((tId=>tId!=e.params.data.id)),remove_tags:[...payload.remove_tags,parseInt(e.params.data.id)]})})).on("select2:select",(e=>{updateContact({add_tags:[...payload.add_tags,parseInt(e.params.data.id)].filter((tId=>!getContact().tags.find((t=>t.ID==tId)))),remove_tags:payload.remove_tags.filter((tId=>tId!=e.params.data.id))})}));$(`#${prefix}-first-name, #${prefix}-last-name, #${prefix}-email, #${prefix}-optin-status, #${prefix}-owner`).on("change",(e=>{updateContact({data:{[e.target.name]:e.target.value}})}));$(`#${prefix}-primary-phone, #${prefix}-primary-phone-extension, #${prefix}-mobile-phone`).on("change",(e=>{updateContact({meta:{[e.target.name]:e.target.value}})}))};const{close:close,setContent:setContent}=modal({content:quickEdit(getContact()),onOpen:quickEditMounted})};const quickAddForm=(selector,{prefix:prefix="quick-add",onCreate:onCreate=(()=>{})})=>{const quickAddForm=()=>`\n\t\t  <div class="gh-rows-and-columns">\n\t\t\t  <div class="gh-row">\n\t\t\t\t  <div class="gh-col">\n\t\t\t\t\t  <label for="${prefix}-first-name">${__("First Name","groundhogg")}</label>\n\t\t\t\t\t  ${input({id:`${prefix}-first-name`,name:"first_name",placeholder:"John"})}\n\t\t\t\t  </div>\n\t\t\t\t  <div class="gh-col">\n\t\t\t\t\t  <label for="${prefix}-last-name">${__("Last Name","groundhogg")}</label>\n\t\t\t\t\t  ${input({id:`${prefix}-last-name`,name:"last_name",placeholder:"Doe"})}\n\t\t\t\t  </div>\n\t\t\t  </div>\n\t\t\t  <div class="gh-row">\n\t\t\t\t  <div class="gh-col">\n\t\t\t\t\t  <label for="${prefix}-email">${__("Email Address","groundhogg")}</label>\n\t\t\t\t\t  ${input({id:`${prefix}-email`,name:"email",placeholder:"john@example.com",required:true})}\n\t\t\t\t  </div>\n\t\t\t\t  <div class="gh-col">\n\t\t\t\t\t  <div class="gh-row phone">\n\t\t\t\t\t\t  <div class="gh-col">\n\t\t\t\t\t\t\t  <label for="${prefix}-primary-phone">${__("Primary Phone","groundhogg")}</label>\n\t\t\t\t\t\t\t  ${input({type:"tel",id:`${prefix}-primary-phone`,name:"primary_phone"})}\n\t\t\t\t\t\t  </div>\n\t\t\t\t\t\t  <div class="primary-phone-ext">\n\t\t\t\t\t\t\t  <label\n\t\t\t\t\t\t\t\t  for="${prefix}-primary-phone-extension">${_x("Ext.","phone number extension","groundhogg")}</label>\n\t\t\t\t\t\t\t  ${input({type:"number",id:`${prefix}-primary-phone-ext`,name:"primary_phone_extension"})}\n\t\t\t\t\t\t  </div>\n\t\t\t\t\t  </div>\n\t\t\t\t  </div>\n\t\t\t  </div>\n\t\t\t  <div class="gh-row">\n\t\t\t\t  <div class="gh-col">\n\t\t\t\t\t  <label for="${prefix}-email">${__("Optin Status","groundhogg")}</label>\n\t\t\t\t\t  ${select({id:`${prefix}-optin-status`,name:"optin_status"},Groundhogg.filters.optin_status)}\n\t\t\t\t  </div>\n\t\t\t\t  <div class="gh-col">\n\t\t\t\t\t  <label for="${prefix}-mobile-phone">${__("Mobile Phone","groundhogg")}</label>\n\t\t\t\t\t  ${input({type:"tel",id:`${prefix}-mobile-phone`,name:"mobile_phone"})}\n\t\t\t\t  </div>\n\t\t\t  </div>\n\t\t\t  <div class="gh-row">\n\t\t\t\t  <div class="gh-col">\n\t\t\t\t\t  <label for="${prefix}-owner">${__("Owner","noun the contact owner","groundhogg")}</label>\n\t\t\t\t\t  ${select({id:`${prefix}-owner`,name:"owner_id"},Groundhogg.filters.owners.map((u=>({text:u.data.user_email,value:u.ID}))))}\n\t\t\t\t  </div>\n\t\t\t\t  <div class="gh-col">\n\t\t\t\t\t  <label for="${prefix}-tags">${__("Tags","groundhogg")}</label>\n\t\t\t\t\t  ${select({id:`${prefix}-tags`,multiple:true,dataPlaceholder:__("Type to select tags...","groundhogg"),style:{width:"100%"}})}\n\t\t\t\t  </div>\n\t\t\t  </div>\n\t\t\t  <div class="gh-row">\n\t\t\t\t  <div class="gh-col">\n\t\t\t\t\t  <div>\n\t\t\t\t\t\t  <label\n\t\t\t\t\t\t\t  for="${prefix}-terms">${input({id:`${prefix}-terms`,type:"checkbox",name:"terms_agreement",value:"yes"})}\n\t\t\t\t\t\t\t  ${__("Agreed to the terms and conditions?","groundhogg")}</label>\n\t\t\t\t\t  </div>\n\t\t\t\t\t  <div>\n\t\t\t\t\t\t  <label\n\t\t\t\t\t\t\t  for="${prefix}-data-consent">${input({id:`${prefix}-data-consent`,type:"checkbox",name:"data_consent",value:"yes"})}\n\t\t\t\t\t\t\t  ${__("Agreed to data processing and storage? (GDPR)","groundhogg")}</label>\n\t\t\t\t\t  </div>\n\t\t\t\t\t  <div>\n\t\t\t\t\t\t  <label\n\t\t\t\t\t\t\t  for="${prefix}-marketing-consent">${input({id:`${prefix}-marketing-consent`,type:"checkbox",name:"marketing_consent",value:"yes"})}\n\t\t\t\t\t\t\t  ${__("Agreed to receive marketing? (GDPR)","groundhogg")}</label>\n\t\t\t\t\t  </div>\n\t\t\t\t  </div>\n\t\t\t  </div>\n\t\t\t  <div class="align-right-space-between">\n\t\t\t\t  <button id="${prefix}-create" class="gh-button primary">\n\t\t\t\t\t  ${__("Create Contact","groundhogg")}\n\t\t\t\t  </button>\n\t\t\t  </div>\n\t\t  </div>`;$(selector).html(quickAddForm());let payload={data:{owner_id:currentUser.ID},meta:{}};const setPayload=data=>{payload={...payload,...data}};$(`#${prefix}-create`).on("click",(({target:target})=>{if(!payload.data.email||!isValidEmail(payload.data.email)){errorDialog({message:__("A valid email is required!","groundhogg")});return}$(target).prop("disabled",true);const{stop:stop}=loadingDots(`#${prefix}-quick-add-button`);ContactsStore.post(payload).then((c=>{stop();onCreate(c)}))}));$(`\n    #${prefix}-first-name,\n    #${prefix}-last-name,\n    #${prefix}-owner,\n    #${prefix}-optin-status,\n    #${prefix}-email`).on("change input",(({target:target})=>{setPayload({data:{...payload.data,[target.name]:target.value}})}));$(`\n    #${prefix}-primary-phone,\n    #${prefix}-primary-phone-ext,\n    #${prefix}-mobile-phone`).on("change input",(({target:target})=>{setPayload({meta:{...payload.meta,[target.name]:target.value}})}));$(`\n    #${prefix}-terms,\n    #${prefix}-data-consent,\n    #${prefix}-marketing-consent`).on("change",(({target:target})=>{setPayload({meta:{...payload.meta,[target.name]:target.checked}})}));tagPicker(`#${prefix}-tags`).on("change",(({target:target})=>{setPayload({tags:$(target).val()})}))};const addContactModal=({prefix:prefix="quick-add",onCreate:onCreate=(()=>{})})=>{let method="quick-add";let selectedForm;const form=()=>{const quickAddForm=()=>`\n\t\t\t<div id="${prefix}-quick-add-form" style="margin-top: 50px"></div>`;const useForm=()=>`\n\t\t\t<div class="gh-rows-and-columns" style="margin-top: 50px">\n\t\t\t\t<div class="gh-row">\n\t\t\t\t\t<div class="gh-col">\n\t\t\t\t\t\t<label for="${prefix}-select-form">${__("Select a form","groundhogg")}</label>\n\t\t\t\t\t\t${select({id:`${prefix}-select-form`,name:"select_form"})}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div style="margin-top: 20px">\n\t\t\t\t${selectedForm?selectedForm.rendered:""}\n\t\t\t</div>`;return`\n\t\t  <div class="quick-add-wrap" style="width: 500px">\n\t\t\t  <div class="gh-header modal-header">\n\t\t\t\t  <h3>${__("Add Contact","groundhogg")}</h3>\n\t\t\t\t  <div class="actions align-right-space-between">\n\t\t\t\t\t  <button\n\t\t\t\t\t\t  class="gh-button dashicon no-border icon ${method=="quick-add"?"filled":""} use-quick-add">\n\t\t\t\t\t\t  ${icons.createContact}</span></button>\n\t\t\t\t\t  <button class="gh-button dashicon no-border icon ${method=="form"?"filled":""} use-form">\n\t\t\t\t\t\t  ${icons.form}</span></button>\n\t\t\t\t\t  <button class="gh-button dashicon no-border icon text ${prefix}-cancel"><span\n\t\t\t\t\t\t  class="dashicons dashicons-no-alt"></span></button>\n\t\t\t\t  </div>\n\t\t\t  </div>\n\t\t\t  ${method=="form"?useForm():quickAddForm()}\n\t\t  </div>\n      `};const onMount=({close:close,setContent:setContent})=>{const reMount=()=>{setContent(form());onMount({close:close,setContent:setContent})};tooltip(".use-quick-add",{content:__("Use quick-add form","groundhogg")});tooltip(".use-form",{content:__("Use internal form","groundhogg")});$(".use-form").on("click",(e=>{method="form";reMount()}));$(".use-quick-add").on("click",(e=>{method="quick-add";reMount()}));$(`.${prefix}-cancel`).on("click",close);if(method=="quick-add"){quickAddForm(`#${prefix}-quick-add-form`,{prefix:prefix,onCreate:c=>{close();onCreate(c)}})}else{$(`#${prefix}-select-form`).ghPicker({endpoint:FormsStore.route,width:"100%",placeholder:__("Type to search...","groundhogg"),data:FormsStore.getItems().map((f=>({id:f.ID,text:f.name,selected:selectedForm&&f.ID==selectedForm.ID}))),getResults:({items:items})=>{FormsStore.itemsFetched(items);return items.map((f=>({id:f.ID,text:f.name})))}}).on("select2:select",(e=>{selectedForm=FormsStore.get(e.params.data.id);reMount()}));if(selectedForm){$(".quick-add-wrap form.gh-form").on("submit",(e=>{e.preventDefault();var $form=$(e.currentTarget);let $btn=$form.find("#gh-submit");let origTxt=$btn.text();$btn.prop("disabled",true);$btn.text(__("Submitting","groundhogg"));const{stop:stop}=loadingDots(".quick-add-wrap form.gh-form #gh-submit");var data=new FormData($form[0]);data.append("action","groundhogg_ajax_form_submit");$.ajax({method:"POST",url:ajaxurl,data:data,processData:false,contentType:false,cache:false,timeout:6e5,enctype:"multipart/form-data",success:r=>{stop();$btn.prop("disabled",false);$btn.text(origTxt);if(!r.success){dialog({message:r.data[0].message,type:"error"})}else{dialog({message:__("Form submitted!")});close();ContactsStore.itemsFetched([r.data.contact]);onCreate(r.data.contact)}},error:e=>{dialog({message:__("Something went wrong...","groundhogg"),type:"error"})}})}))}}};return modal({content:form(),onOpen:onMount})};const emailModal=props=>{const email={to:[],from_name:"",from_email:"",cc:[],bcc:[],subject:"",content:"",...props};let showCc=email.cc.length>0;let showBcc=email.bcc.length>0;const template=()=>`\n\t\t  <div class="gh-rows-and-columns">\n\t\t\t  <div class="gh-row">\n\t\t\t\t  <label>${__("To:")}</label>\n\t\t\t\t  <div class="gh-col">\n\t\t\t\t\t  <select id="recipients"></select>\n\t\t\t\t  </div>\n\t\t\t\t  ${!showCc?`<a id="send-email-cc" href="#">${__("Cc")}</a>`:""}\n\t\t\t\t  ${!showBcc?`<a id="send-email-bcc" href="#">${__("Bcc")}</a>`:""}\n\t\t\t  </div>\n\t\t\t  ${showCc?`<div class="gh-row">\n\t\t\t\t  <label>${__("Cc:")}</label>\n\t\t\t\t  <div class="gh-col">\n\t\t\t\t\t  <select id="cc"></select>\n\t\t\t\t  </div>\n\t\t\t  </div>`:""}\n\t\t\t  ${showBcc?`<div class="gh-row">\n\t\t\t\t  <label>${__("Bcc:")}</label>\n\t\t\t\t  <div class="gh-col">\n\t\t\t\t\t  <select id="bcc"></select>\n\t\t\t\t  </div>\n\t\t\t  </div>`:""}\n\t\t\t  <div class="gh-row">\n\t\t\t\t  <div class="gh-col">\n\t\t\t\t\t  ${input({placeholder:__("Subject line..."),id:"send-email-subject",value:email.subject})}\n\t\t\t\t  </div>\n\t\t\t  </div>\n\t\t\t  <div class="gh-row">\n\t\t\t\t  <div class="gh-col">\n\t\t\t\t\t  ${textarea({id:"send-email-content",value:email.subject})}\n\t\t\t\t  </div>\n\t\t\t  </div>\n\t\t\t  <div class="gh-row">\n\t\t\t\t  <div class="gh-col align-right-space-between">\n\t\t\t\t\t  <button class="gh-button danger text" id="discard-draft">${__("Discard")}</button>\n\t\t\t\t\t  <button class="gh-button primary" id="send-email-commit">${__("Send")}</button>\n\t\t\t\t  </div>\n\t\t\t  </div>\n\t\t  </div>`;const onMount=({close:close,setContent:setContent})=>{const reMount=()=>{wp.editor.remove("send-email-content");setContent(template());onMount({close:close,setContent:setContent})};const selectChange=(e,name)=>{email[name]=$(e.target).val()};$("#recipients").ghPicker({endpoint:ContactsStore.route,getResults:r=>r.items.map((c=>({text:c.data.email,id:c.data.email}))),getParams:q=>({...q,email:q.term,email_compare:"starts_with"}),data:email.to.map((i=>({id:i,text:i,selected:true}))),tags:true,multiple:true,width:"100%",placeholder:__("Recipients")}).on("change",(e=>selectChange(e,"to")));$("#cc").ghPicker({endpoint:ContactsStore.route,getResults:r=>r.items.map((c=>({text:c.data.email,id:c.data.email}))),getParams:q=>({...q,email:q.term,email_compare:"starts_with"}),data:email.cc.map((i=>({id:i,text:i,selected:true}))),tags:true,multiple:true,width:"100%",placeholder:__("Cc")}).on("change",(e=>selectChange(e,"cc")));$("#bcc").select2({data:[...email.bcc.map((i=>({id:i,text:i,selected:true}))),...Groundhogg.filters.owners.filter((u=>!email.bcc.includes(u.data.user_email))).map((u=>({text:u.data.user_email,id:u.data.user_email})))],tags:true,multiple:true,width:"100%",placeholder:__("Bcc")}).on("change",(e=>selectChange(e,"bcc")));$("#send-email-subject").on("change",(e=>{email.subject=e.target.value})).focus();addMediaToBasicTinyMCE();let editor=tinymceElement("send-email-content",{quicktags:false,tinymce:{height:300}},(content=>{email.content=content}));$("#send-email-cc").on("click",(()=>{showCc=true;reMount()}));$("#send-email-bcc").on("click",(()=>{showBcc=true;reMount()}));$("#discard-draft").on("click",close);$("#send-email-commit").on("click",(({target:target})=>{$(target).text(__("Sending","groundhogg")).prop("disabled",true);const{stop:stop}=loadingDots(target);post(`${routes.v4.emails}/send`,{...email,content:editor.getContent({format:"raw"})}).then((r=>{stop();$(target).text(__("Send","groundhogg")).prop("disabled",false);if(r.status!=="success"){dialog({message:r.message,type:"error"});return}dialog({message:__("Message sent!","groundhogg")});close()}))}))};return modal({content:template(),onOpen:onMount,onClose:()=>{wp.editor.remove("send-email-content")},overlay:false,className:"send-email",dialogClasses:"gh-panel",disableScrolling:false})};const makeInput=(selector,{inputProps:inputProps={},value:value="",onChange:onChange=(()=>{}),replaceWith:replaceWith=(()=>{})})=>{inputProps={id:uuid(),value:value,...inputProps};$(selector).replaceWith(input(inputProps));$(`#${inputProps.id}`).focus().on("blur keydown",(e=>{if(e.type==="keydown"&&e.key!=="Enter"){return}value=e.target.value;onChange(value);$(`#${inputProps.id}`).replaceWith(replaceWith(value))}))};Groundhogg.components={addContactModal:addContactModal,quickAddForm:quickAddForm,selectContactModal:selectContactModal,quickEditContactModal:quickEditContactModal,makeInput:makeInput,emailModal:emailModal}})(jQuery);