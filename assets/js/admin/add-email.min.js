(function($,Templates){const{breadcrumbs:breadcrumbs,select:select,regexp:regexp,modal:modal,input:input,primaryButton:primaryButton,loadingDots:loadingDots}=Groundhogg.element;const{templates:templates}=Templates;const{post:post,get:get,routes:routes}=Groundhogg.api;const setFrameContent=(frame,content)=>{var blob=new Blob([content],{type:"text/html; charset=utf-8"});frame.src=URL.createObjectURL(blob)};const{sprintf:sprintf,__:__,_x:_x,_n:_n}=wp.i18n;const rowsOf=(size,items)=>items.reduce(((rows,item)=>{if(rows[rows.length-1].length===size){rows.push([])}rows[rows.length-1].push(item);return rows}),[[]]);const createEmail=template=>post(`${routes.v4.emails}`,{...template,ID:false}).then((r=>r.item));const fillRow=(size,fill,row)=>{while(row.length<size){row.push(fill)}return row};const EmailTemplatePicker=({selector:selector,breadcrumbs:crumbs=[__("Emails","groundhogg"),__("Add New","groundhogg")],onSelect:onSelect=(email=>{console.log(email)}),afterHeaderActions:afterHeaderActions="",onMount:onMount=(()=>{})})=>({search:"",selectedTemplate:"",$el:$(selector),renderTemplate(template){const{ID:ID,data:data,meta:meta,steps:steps}=template;return`\n\t\t  <div class="gh-panel template" tabindex="0">\n\t\t\t  <div class="subject-and-preview">\n\t\t\t\t  <div class="subject-wrap">${__("Subject","groundhogg")}: <span class="subject">${data.subject}</span></div>\n\t\t\t\t  <div class="preview-wrap">${__("Preview","groundhogg")}: <span class="preview-text">${data.pre_header}</span></div>\n\t\t\t  </div>\n\t\t\t  <div class="template-preview">\n\t\t\t\t  <div class="template-content">\n\t\t\t\t\t  <iframe class="template-frame" data-template="${ID}"></iframe>\n\t\t\t\t  </div>\n\t\t\t\t  <div class="template-actions">\n\t\t\t\t\t  <button class="gh-button primary select-template" data-template="${ID}">${__("Use Template","groundhogg")}</button>\n\t\t\t\t  </div>\n\t\t\t  </div>\n\t\t  </div>`},render(){return`\n\t\t  <div class="templates-picker">\n\t\t\t  <div id="header" class="gh-header is-sticky">\n\t\t\t\t  <div class="title-wrap">\n\t\t\t\t\t  <h1 class="breadcrumbs">\n\t\t\t\t\t\t  ${breadcrumbs(crumbs)}\n\t\t\t\t\t  </h1>\n\t\t\t\t  </div>\n\t\t\t\t  <div class="search-templates">\n\t\t\t\t\t  ${select({id:"campaign",name:"campaign"},{a:"campaign a",b:"campaign b"})}\n\t\t\t\t\t  <input type="search" id="search" name="search" placeholder="Search templates" value=""/>\n\t\t\t\t  </div>\n\t\t\t\t  <div class="template-actions">\n\t\t\t\t\t  <button id="import-button" class="gh-button secondary">${__("Import","groundhogg")}</button>\n\t\t\t\t\t  <button id="scratch-button" class="gh-button secondary">${__("Start From Scratch","groundhogg")}</button>\n\t\t\t\t\t  ${afterHeaderActions}\n\t\t\t\t  </div>\n\t\t\t  </div>\n\t\t\t  <div id="view"></div>\n\t\t  </div>`},renderTemplates(){return`<div id="templates">${this.getTemplates().map((t=>this.renderTemplate(t))).join("")}</div>`},getTemplates(){return templates.filter((t=>{if(!this.search){return true}return t.data.title.match(regexp(this.search))}))},titleModal(){const modalContent=(isCreating=false)=>`\n\t\t\t<div id="template-name"><h2>${__("Name your email","groundhogg")}</h2>\n\t\t\t\t${input({id:"title-input",placeholder:"Title",value:this.newTitle,disabled:isCreating})}\n\t\t\t\t${primaryButton({id:"create",className:"medium bold",text:isCreating?__("Creating","groundhogg"):__("Creat Email","groundhogg"),disabled:isCreating||!this.newTitle})}\n\t\t\t</div>`;const{close:close,setContent:setContent}=modal({content:modalContent()});const handleCreate=()=>{setContent(modalContent(true));loadingDots(`#create`);createEmail({...this.selectedTemplate,data:{...this.selectedTemplate.data,title:this.newTitle}}).then((email=>{close();onSelect(email)}))};$(`#create`).on("click",handleCreate);$(`#title-input`).focus().on("change input keydown",(e=>{this.newTitle=e.target.value;if(this.newTitle){$("#create").prop("disabled",false)}else{$("#create").prop("disabled",true)}if(e.type==="keydown"&&e.key==="Enter"&&this.newTitle){handleCreate()}}))},mountTemplates(){$(`${selector} #view`).html(this.renderTemplates());$(`${selector} button.select-template`).on("click",(e=>{const templateId=e.target.dataset.template;const template=templates.find((t=>t.ID==templateId));this.selectedTemplate=template;this.newTitle=this.selectedTemplate.data.title;this.titleModal()}));$(`${selector} iframe.template-frame`).each((function(){const template=this.dataset.template;setFrameContent(this,templates.find((t=>t.ID===template)).context.built)}))},renderImport(){if(this.importTemplate){return`\n\t\t\t<div id="import">\n\t\t\t\t<h1>Import your Email</h1>\n\t\t\t\t<div class="template-preview-wrap">\n\t\t\t\t\t<div class="import-template-preview">\n\t\t\t\t\t\t<iframe id="template-preview"></iframe>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="template-actions">\n\t\t\t\t\t\t${primaryButton({text:__("Use this template","groundhogg"),id:"create-from-import",className:"big bold loud"})}\n\t\t\t\t\t\t<a href="#" class="cancel action-link">&larr; ${__("Cancel","groundhogg")}</a>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>`}return`\n\t\t  <div id="import">\n\t\t\t  <h1>Import your Email</h1>\n\t\t\t  <input type="file" id="import-file" name="import" accept=".email,.html"/>\n\t\t\t  ${this.importError?`<p class="error">${this.importError}</p>`:""}\n\t\t\t  <p><a class="action-link cancel">&larr; ${__("Cancel","groundhogg")}</a></p>\n\t\t  </div>`},mountImport:function(){$(`${selector} #view`).html(this.renderImport());if(this.importTemplate){setFrameContent($("#template-preview")[0],this.importTemplate.data.content);$("#create-from-import").on("click",(e=>{this.selectedTemplate=this.importTemplate;this.newTitle=this.selectedTemplate.data.title||"";this.titleModal()}))}const onReaderLoadHTML=e=>{const content=e.target.result;if(!content){this.importError=__("The provided file is not a valid funnel.","groundhogg");this.mountImport();this.importError="";return}this.importTemplate={data:{content:content},meta:{type:"html"}};this.mountImport()};const onReaderLoadJSON=e=>{const template=JSON.parse(e.target.result);if(!template){this.importError=__("The provided file is not a valid funnel.","groundhogg");this.mountImport();this.importError=""}else{this.importError="";this.importTemplate=template;this.mountImport()}};$(`${selector} a.cancel`).on("click",(()=>{this.reset();this.mountTemplates()}));$(`${selector} #import-file`).on("change",(e=>{const files=e.target.files;const reader=new FileReader;const file=files[0];const ext=file.name.split(".").pop().toLowerCase();switch(ext){case"html":reader.onload=onReaderLoadHTML;reader.readAsText(file);return;case"json":reader.onload=onReaderLoadJSON;reader.readAsText(file);return}}))},reset(){this.selectedTemplate=false;this.importTemplate=false;this.newTitle=""},mount(){this.$el.html(this.render());this.mountTemplates();$(`${selector} #search`).on("input change",(e=>{this.search=e.target.value;this.reset();this.mountTemplates()}));$(`${selector} #import-button`).on("click",(e=>{this.reset();this.mountImport()}));$(`${selector} #scratch-button`).on("click",(e=>{this.reset();this.selectedTemplate={data:{},meta:{}};this.titleModal()}));onMount()}});Groundhogg.EmailTemplatePicker=EmailTemplatePicker})(jQuery,AddEmail);