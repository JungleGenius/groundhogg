($=>{const{propertiesEditor:propertiesEditor}=Groundhogg;const{createFilters:createFilters}=Groundhogg.filters.functions;const{searchOptionsWidget:searchOptionsWidget,regexp:regexp,specialChars:specialChars,modal:modal,input:input,loadingDots:loadingDots,copyObject:copyObject,objectEquals:objectEquals,toggle:toggle,moreMenu:moreMenu,select:select,dangerConfirmationModal:dangerConfirmationModal,confirmationModal:confirmationModal,clickInsideElement:clickInsideElement,progressBar:progressBar,dialog:dialog,bold:bold,tooltip:tooltip,adminPageURL:adminPageURL}=Groundhogg.element;const{betterTagPicker:betterTagPicker}=Groundhogg.components;const{post:post,get:get,patch:patch,routes:routes,ajax:ajax}=Groundhogg.api;const{searches:SearchesStore,contacts:ContactsStore,tags:TagsStore,funnels:FunnelsStore}=Groundhogg.stores;const{tagPicker:tagPicker,funnelPicker:funnelPicker}=Groundhogg.pickers;const{userHasCap:userHasCap}=Groundhogg.user;const{formatNumber:formatNumber,formatTime:formatTime,formatDate:formatDate,formatDateTime:formatDateTime}=Groundhogg.formatting;const{sprintf:sprintf,__:__,_x:_x,_n:_n}=wp.i18n;const fieldSection=({title:title="",fields:fields=""})=>{return`
		<div class="gh-panel">
			<div class="gh-panel-header">
				<h2>${title}</h2>
				<button type="button" class="toggle-indicator" aria-expanded="true"></button>
			</div>
			<div class="inside">
				${fields}
			</div>
		</div>`};let sections=[{title:__("General","groundhogg"),fields:`
		  <div class="gh-rows-and-columns">
			  <div class="gh-row">
				  <div class="gh-col">
					  <label for="email">${__("Optin Status","groundhogg")}</label>
					  ${select({id:`optin-status`,name:"optin_status"},Groundhogg.filters.optin_status)}
				  </div>
				  <div class="gh-col">
					  <label for="owner">${__("Owner","noun the contact owner","groundhogg")}</label>
					  ${select({id:`owner`,name:"owner_id"},Groundhogg.filters.owners.map(u=>({text:u.data.user_email,value:u.ID})))}
				  </div>
			  </div>
		  </div>`,onMount:()=>{}},{title:'<span class=" dashicons dashicons-tag"></span>'+__("Apply Tags","groundhogg"),fields:`
		  <div id="apply-tags"></div>`,onMount:()=>{betterTagPicker("#apply-tags",{onChange:({addTags:addTags})=>{console.log(addTags)}})}},{title:'<span class=" dashicons dashicons-tag"></span>'+__("Remove Tags","groundhogg"),fields:`
		  <div id="remove-tags"></div>`,onMount:({})=>{betterTagPicker("#remove-tags",{onChange:({addTags:addTags})=>{console.log(addTags)}})}}];BulkEdit.gh_contact_custom_properties.tabs.forEach(t=>{let groups=BulkEdit.gh_contact_custom_properties.groups.filter(g=>g.tab===t.id);let fields=BulkEdit.gh_contact_custom_properties.fields.filter(f=>groups.find(g=>g.id===f.group));sections.push({title:t.name,fields:`<div id="${t.id}"></div>`,onMount:({updateMeta:updateMeta})=>{propertiesEditor(`#${t.id}`,{values:{},properties:{groups:groups,fields:fields},onChange:meta=>{updateMeta(meta)},canEdit:()=>false})}})});$(()=>{let data,meta,add_tags,remove_tags;const updateData=_data=>{data={...data,..._data}};const updateMeta=_meta=>{meta={...meta,..._meta}};$("#bulk-edit").html(sections.map(({title:title,fields:fields})=>fieldSection({title:title,fields:fields})));sections.forEach(s=>s.onMount({updateData:updateData,updateMeta:updateMeta}))})})(jQuery);