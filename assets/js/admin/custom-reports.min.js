($=>{const{moreMenu:moreMenu,loadingModal:loadingModal,icons:icons,select:select,modal:modal,input:input,uuid:uuid,dialog:dialog,dangerConfirmationModal:dangerConfirmationModal,adminPageURL:adminPageURL}=Groundhogg.element;const{routes:routes,post:post,get:get}=Groundhogg.api;const{options:OptionsStore}=Groundhogg.stores;const{createFilters:createFilters}=Groundhogg.filters.functions;const{metaPicker:metaPicker}=Groundhogg.pickers;const{__:__}=wp.i18n;function adjust(color,amount){return"#"+color.replace(/^#/,"").replace(/../g,(color=>("0"+Math.min(255,Math.max(0,parseInt(color,16)+amount)).toString(16)).substr(-2)))}function utf8_to_b64(str){return window.btoa(unescape(encodeURIComponent(str)))}function b64_to_utf8(str){return decodeURIComponent(escape(window.atob(str)))}const base64_json_encode=stuff=>utf8_to_b64(JSON.stringify(stuff));const reportTypes={pie_chart:{name:__("Pie Chart","groundhogg"),settings:({field:field=""})=>`\n\t\t\t<div class="row">\n\t\t\t\t<div class="col">\n\t\t\t\t\t<label for="value">${__("Custom Field")}</label>\n\t\t\t\t\t${input({id:"field",value:field})}\n\t\t\t\t</div>\n\t\t\t</div>`,settingsOnMount:(filter,updateReport)=>{metaPicker("#field").on("change",(e=>{updateReport({field:e.target.value})}))},render:({id:id,data:data})=>`\n\t\t\t<div class="inside">\n\t\t\t\t<canvas class="pie-chart" data-id="${id}"></canvas>\n\t\t\t</div>\n        `,onMount:({id:id,field:field,data:data})=>{let cuttoff=11;let ctx=$(`.pie-chart[data-id=${id}]`)[0].getContext("2d");let _data=data;if(_data.length>cuttoff){_data=data.slice(0,cuttoff);let _rest=data.slice(cuttoff).reduce(((carr,i)=>carr+parseInt(i.count)),0);_data.push({count:_rest,value:__("Other")})}let chart=new Chart(ctx,{type:"doughnut",data:{datasets:[{data:_data.map((({count:count})=>count)),backgroundColor:_data.map(((d,i)=>adjust("#4fa4ff",-(i*30))))}],labels:_data.map((({value:value})=>value))},options:{onClick:(e,arr)=>{if(arr.length&&arr[0]._index===cuttoff&&arr[0]._view.label===__("Other")){let _data=data.slice(cuttoff);modal({content:`<canvas class="pie-chart-large" style="height: 600px" data-id="${id}"></canvas>`,onOpen:()=>{let ctx=$(`.pie-chart-large[data-id=${id}]`)[0].getContext("2d");let chart=new Chart(ctx,{type:"doughnut",data:{datasets:[{data:_data.map((({count:count})=>count)),backgroundColor:_data.map(((d,i)=>adjust("#4fa4ff",-(i*30))))}],labels:_data.map((({value:value})=>value))},options:{maintainAspectRatio:false,aspectRatio:1,onClick:(e,arr)=>{if(arr.length&&arr[0]._view){window.open(adminPageURL("gh_contacts",{meta_key:field,meta_value:arr[0]._view.label}),"_blank")}},legend:{position:"bottom"}}})}});return}if(arr.length&&arr[0]._view){window.open(adminPageURL("gh_contacts",{meta_key:field,meta_value:arr[0]._view.label}),"_blank")}},legend:{position:"right"}}})}},table:{name:__("Table","groundhogg"),settings:({field:field=""})=>`\n\t\t\t<div class="row">\n\t\t\t\t<div class="col">\n\t\t\t\t\t<label for="value">${__("Custom Field")}</label>\n\t\t\t\t\t${input({id:"field",value:field})}\n\t\t\t\t</div>\n\t\t\t</div>`,settingsOnMount:(filter,updateReport)=>{metaPicker("#field").on("change",(e=>{updateReport({field:e.target.value})}))},render:({id:id,data:data,num:num=10})=>`\n\t\t\t<table class="groundhogg-report-table">\n\t\t\t\t<tbody>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t\t<div class="inside">\n\t\t\t\t<div class="display-flex flex-end gap-10 align-center">\n\t\t\t\t\t<label>${__("Number of records")}</label>\n\t\t\t\t\t<div class="gh-input-group">\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>`,onMount:({id:id,data:data,field:field})=>{let num=10;const setData=()=>{$(`#${id} tbody`).html(data.slice(0,num).map((row=>dataRow(row))).join(""));$(`#${id} .gh-input-group`).html([10,25,50].map((_num=>`<button class="gh-button ${num===_num?"primary":"secondary"} num-records" data-num="${_num}">${_num}</button>`)));$(`#${id} .num-records`).on("click",(e=>{num=parseInt(e.target.dataset.num);setData()}));$(`.number-total[data-id=${id}]`).on("click",(e=>{window.open(adminPageURL("gh_contacts",{meta_key:field,meta_value:e.target.dataset.value}),"_blank")}))};const dataRow=({value:value,count:count})=>`\n\t\t\t  <tr>\n\t\t\t\t  <td>${value}</td>\n\t\t\t\t  <td class="number-total" data-id="${id}" data-value="${value}">${count}</td>\n\t\t\t  </tr>`;setData()}},number:{name:__("Number","groundhogg"),settings:({value:value="contacts",field:field=""})=>{const maybeExtra=()=>{switch(value){case"contacts":return"";case"sum":case"average":return`\n\t\t\t\t  <div class="row">\n\t\t\t\t\t  <div class="col">\n\t\t\t\t\t\t  <label for="value">${__("Custom Field")}</label>\n\t\t\t\t\t\t  ${input({id:"field",value:field})}\n\t\t\t\t\t  </div>\n\t\t\t\t  </div>`}};return`\n\t\t\t<div class="row">\n\t\t\t\t<div class="col">\n\t\t\t\t\t<label for="value">${__("Report Value")}</label>\n\t\t\t\t\t${select({id:"value"},{contacts:__("Total number of contacts","groundhogg")},value)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t${maybeExtra()}`},settingsOnMount:(filter,updateReport)=>{$("#value").on("change",(e=>{updateReport({value:e.target.value},true);$("#value").focus()}));metaPicker("#field").on("change",(e=>{updateReport({field:e.target.value})}))},render:({id:id,data:data})=>`\n\t\t\t<div class="inside">\n\t\t\t\t<div data-id="${id}" class="big-number display-flex center">\n\t\t\t\t\t${data}\n\t\t\t\t</div>\n\t\t\t</div>`,onMount:({id:id,filters:filters})=>{$(`.big-number[data-id=${id}]`).on("click",(e=>{window.open(adminPageURL("gh_contacts",{filters:base64_json_encode(filters)}),"_blank")}))}}};const renderReport=report=>`\n\t\t<div id="${report.id}" class="gh-panel report ${report.type}" data-id="${report.id}">\n\t\t\t<div class="gh-panel-header">\n\t\t\t\t<h2>${report.name}</h2>\n\t\t\t\t<button class="report-more gh-button secondary text icon" data-id="${report.id}">${icons.verticalDots}\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t${reportTypes[report.type].render(report)}\n\t\t</div>`;let reports=[];const loadReports=()=>get(`${routes.v4.root}/custom-reports`).then((r=>{reports=r.items??[];mount()}));const loadReport=id=>{get(`${routes.v4.root}/custom-reports/${id}`).then((r=>{reports=reports.map((report=>report.id===id?r.item:report));mount()}))};const mount=()=>{$("#custom-reports").html(reports.sort((({order:a},{order:b})=>a-b)).map((report=>renderReport(report))).join(""));onMount()};const renderReportEdit=report=>`\n\t\t<h2>${__("Create Report")}</h2>\n\t\t<div class="gh-rows-and-columns">\n\t\t\t<div class="row">\n\t\t\t\t<div class="col">\n\t\t\t\t\t<label for="name">${__("Name","groundhogg")}</label>\n\t\t\t\t\t${input({id:"name",value:report.name})}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class="row">\n\t\t\t\t<div class="col">\n\t\t\t\t\t<label for="report-type">${__("Report Type","groundhogg")}</label>\n\t\t\t\t\t${select({id:"report-type"},Object.keys(reportTypes).map((type=>({value:type,text:reportTypes[type].name}))),report.type)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t${reportTypes[report.type].settings(report)}\n\t\t\t<div class="row">\n\t\t\t\t<div class="col">\n\t\t\t\t\t<label>${__("Filter Contacts","groundhogg")}</label>\n\t\t\t\t\t<div id="filters-here"></div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class="space-between align-right" style="margin-top: 20px">\n\t\t\t<button class="gh-button primary" id="save">${__("Save Report","groundhogg")}</button>\n\t\t</div>`;let commitTimeout;$("#custom-reports").sortable({handle:"h2",tolerance:"pointer",placeholder:"report-placeholder",start:(e,ui)=>{ui.placeholder.addClass(reports.find((r=>r.id===ui.item.data("id"))).type)},update:()=>{$(".report").each(((i,el)=>{let $report=$(el);reports.find((r=>r.id==$report.data("id"))).order=$report.index()}));if(commitTimeout){clearTimeout(commitTimeout)}commitTimeout=setTimeout((()=>{commitReports()}))}});const commitReports=()=>OptionsStore.patch({gh_custom_reports:reports.map((({data:data,...report})=>report))});const editReport=report=>{modal({width:400,content:renderReportEdit(report),dialogClasses:"overflow-visible",onOpen:({close:close,setContent:setContent})=>{const updateReport=(props,reload=false)=>{report={...report,...props};if(reload){setContent(renderReportEdit(report));onMount()}};const onMount=()=>{reportTypes[report.type].settingsOnMount(report,updateReport);$("#name").on("change input",(e=>{updateReport({name:e.target.value})}));$("#report-type").on("change",(e=>{updateReport({type:e.target.value},true);$("#report-type").focus()}));createFilters("#filters-here",report.filters,(filters=>{updateReport({filters:filters})})).init();$("#save").on("click",(()=>{if(reports.find((r=>r.id===report.id))){reports=reports.map((r=>r.id===report.id?report:r))}else{reports.push(report)}commitReports().then((()=>{dialog({message:__("Reports saved!","groundhogg")})})).then((()=>{loadReport(report.id);close()}))}))};onMount()}})};const onMount=()=>{reports.forEach((report=>reportTypes[report.type].onMount(report)));$(".report-more").on("click",(e=>{let reportId=e.currentTarget.dataset.id;let report=reports.find((r=>r.id===reportId));moreMenu(e.currentTarget,{items:[{key:"edit",text:__("Edit")},{key:"delete",text:`<span class="gh-text danger">${__("Delete")}</span>`}],onSelect:k=>{switch(k){case"edit":editReport(report);break;case"delete":dangerConfirmationModal({alert:`<p>${__("Are you sure you want to delete this report?","groundhogg")}</p>`,confirmText:__("Delete"),onConfirm:()=>{reports=reports.filter((r=>r.id!==report.id));commitReports().then((()=>{dialog({message:__("Report deleted.","groundhogg")});mount()}))}});break}}})}))};$(".nav-tab-wrapper").append(`<button id="add-report" class="gh-button primary alignright">${__("Create New Report","groundhogg")}</button>`);$("#add-report").on("click",(e=>{let newReport={type:"number",name:__("New Report"),id:uuid(),filters:[],order:reports.length};editReport(newReport)}));const{close:close}=loadingModal();$((()=>{loadReports().then((()=>{$(".wrap").removeClass("blurred");close()}))}))})(jQuery);