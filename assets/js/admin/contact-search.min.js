(function($,searches){const{createFilters:createFilters}=Groundhogg.filters.functions;const{searchOptionsWidget:searchOptionsWidget,regexp:regexp}=Groundhogg.element;const updateUrl=filters=>{};const ContactSearch={filtersEnabled:false,savedSearchEnabled:false,filters:[],filtersApp:null,searchesApp:null,init:function(){const handleUpdateFilters=filters=>{console.log(filters);this.filters=filters;getContacts(filters)};this.filters=Groundhogg.filters.current;if(searches.length===0){this.filtersEnabled=true}this.filtersApp=createFilters("#search-filters",this.filters,handleUpdateFilters);this.initSavedSearches();this.mount()},initSavedSearches:function(){this.searchesApp=searchOptionsWidget({selector:"#searches-picker",options:searches,filterOption:(option,search)=>{return option.name.match(regexp(search))},renderOption:option=>option.name,onClose:()=>{this.savedSearchEnabled=false;this.mount()},noOptions:"No matching searches..."})},render:function(){if(this.filtersEnabled){return`
			<div class="enable-filters-wrap">
				<button class="enable-filters white"><span class="dashicons dashicons-filter"></button>
			</div>
			<div class="seach-filters-warp">
				<div id="search-filters"></div>
				<div class="search-contacts-wrap">
					<button id="search-contacts" class="button button-primary">Search</button>
				</div>
			</div>`}return`
		  <button class="enable-filters white"><span class="dashicons dashicons-filter"></span></button>
		  ${this.savedSearchEnabled?`<div id="searches-picker"></div>`:searches.length?`<button id="load-saved-search" class="button button-secondary">Load saved search</button>`:""}`},mount:function(){$("#search-panel .filters").html(this.render());this.addListeners()},addListeners:function(){var self=this;const remount=()=>{this.mount()};const enableFilters=()=>{this.filtersEnabled=!this.filtersEnabled;remount()};const enableSavedSearch=()=>{this.savedSearchEnabled=!this.savedSearchEnabled;remount()};if(this.filtersEnabled){this.filtersApp.mount()}if(this.savedSearchEnabled){this.searchesApp.mount()}$(".enable-filters").on("click",function(){enableFilters()});$("#load-saved-search").on("click",function(){enableSavedSearch()});$("#search-contacts").on("click",function(){console.log(self.filters);window.location.href=page.url+"&"+$.param({filters:self.filters})})}};let abortHandler;const getContacts=filters=>{const{post:post,get:get,routes:routes}=Groundhogg.api;if(abortHandler){abortHandler.abort()}abortHandler=new AbortController;const{signal:signal}=abortHandler;get(routes.v4.contacts,{filters:filters},{signal:signal}).then(data=>{$("#search-contacts").html(`Show ${data.total_items} contacts`)})};$(function(){ContactSearch.init()})})(jQuery,SavedSearches);