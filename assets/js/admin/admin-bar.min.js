(function($){const classPrefix="groundhogg-toolbar-quick-search";const{moreMenu:moreMenu,input:input,select:select,tooltip:tooltip,loadingDots:loadingDots,isValidEmail:isValidEmail,dialog:dialog,errorDialog:errorDialog,clickedIn:clickedIn,icons:icons,adminPageURL:adminPageURL}=Groundhogg.element;const{quickAddForm:quickAddForm}=Groundhogg.components;const{userHasCap:userHasCap}=Groundhogg.user;const{sprintf:sprintf,__:__,_x:_x,_n:_n}=wp.i18n;const{formatNumber:formatNumber,formatTime:formatTime,formatDate:formatDate,formatDateTime:formatDateTime}=Groundhogg.formatting;const{tagPicker:tagPicker}=Groundhogg.pickers;const{contacts:ContactsStore}=Groundhogg.stores;const Tabs={search_contacts:{tooltip:`Search for contacts`,cap:"view_contacts",svg:icons.contactSearch,view:()=>{return`
			<div id="quick-search-wrap">
				${input({type:"search",id:"quick-search-input",placeholder:__("Search by name or email...","groundhogg")})}
				<div class="${classPrefix}-results"></div>
			</div>`},onMount:()=>{const mountSearchResults=(items,search)=>{$(`.${classPrefix}-results`).replaceWith(renderSearchResults(items,search));tooltip(`.${classPrefix}-result .edit-profile`,{content:__("Edit profile","groundhogg"),position:"top"});tooltip(`.${classPrefix}-result .send-email`,{content:__("Send email","groundhogg"),position:"top"});tooltip(`.${classPrefix}-result .call-primary`,{content:__("Call","groundhogg"),position:"top"});tooltip(`.${classPrefix}-result .call-mobile`,{content:__("Call mobile","groundhogg"),position:"top"});$(`.${classPrefix}-result`).on("click",e=>{const ID=parseInt(e.currentTarget.dataset.contact);const contact=ContactsStore.get(ID);if(clickedIn(e,".email-contact")){e.preventDefault();window.location.href=contact.admin+"&send_email=true";return}if(clickedIn(e,".call-primary")){return}if(clickedIn(e,".call-mobile")){return}window.location.href=contact.admin})};const renderSearchResult=item=>{return`
			  <div id="search-result-${item.ID}" data-contact="${item.ID}" class="${classPrefix}-result">
				  <img class="avatar" src="${item.data.gravatar}" alt="avatar"/>
				  <div class="details">
					  <div class="name">${item.data.first_name} ${item.data.last_name}</div>
					  <div class="email">${item.data.email}</div>
				  </div>
				  <div class="actions">
					  <button class="gh-button secondary text icon edit-profile">
						  ${icons.contact}
					  </button>
					  <a class="email-contact gh-button secondary text icon send-email" href="mailto:${item.data.email}" data-id=${item.ID} target="_blank">
						  ${icons.email}
					  </a>
					  ${item.meta.primary_phone?`
					  <a class="gh-button secondary text icon call-primary" href="tel:${item.meta.primary_phone}">
						  ${icons.phone}
					  </a>`:""}
					  ${item.meta.mobile_phone?`
					  <a class="gh-button secondary text icon call-mobile" href="tel:${item.meta.mobile_phone}">
						  ${icons.mobile}
					  </a>`:""}
				  </div>
			  </div>`};const renderSearchResults=(items=[],search)=>{if(!items||items.length===0){return`
				<div class="${classPrefix}-results">
					<p>
						${__("No contacts found for the current search","groundhogg")}
					</p>
				</div>`}const viewAllContacts=()=>{let moreItems=ContactsStore.getTotalItems()-items.length;return`<p style="text-align: center"><a
				href="${adminPageURL("gh_contacts",{s:search})}">${sprintf(_n("See %s more contact","See %s more contacts",moreItems),formatNumber(moreItems))}</a>
			</p>`};return`
			  <div class="${classPrefix}-results">
				  ${items.map(item=>renderSearchResult(item)).join("")}
				  ${ContactsStore.getTotalItems()>items.length?viewAllContacts():""}
			  </div>`};let timeout;$("#quick-search-input").on("change input",({target:target})=>{if(timeout){clearTimeout(timeout)}timeout=setTimeout(()=>{ContactsStore.fetchItems({search:target.value,orderby:"date_created",order:"DESC",limit:5}).then(items=>{mountSearchResults(items,target.value)})},1e3)}).focus()}},create_contact:{cap:"add_contacts",tooltip:`Create a contact`,svg:icons.createContact,view:()=>{return`
			<div id="admin-quick-add">
				
			</div>`},onMount:()=>{quickAddForm("#admin-quick-add",{prefix:"admin-quick-add",onCreate:c=>{window.location.href=c.admin}})}},broadcast:{cap:"schedule_broadcasts",tooltip:`Send a broadcast`,svg:icons.megaphone,view:()=>{return`
			<div id="send-broadcast"></div>`},onMount:({setTab:setTab})=>{Groundhogg.SendBroadcast("#send-broadcast",{},{onScheduled:()=>{setTab("broadcast")}})}}};$(()=>{const $menuItem=$("#wp-admin-bar-groundhogg");let openFlag=false;let tab="search_contacts";const close=()=>{openFlag=false;$("#groundhogg-toolbar-quick-search").remove();$("body").removeClass("groundhogg-toolbar-quick-search-open")};$menuItem.on("click",e=>{if(openFlag){close();return}openFlag=true;const{right:right,bottom:bottom}=e.currentTarget.getBoundingClientRect();const renderTabs=()=>{const renderTab=(t,{svg:svg,cap:cap})=>{if(!userHasCap(cap)){return""}return`
			  <button id="gh-tab-${t}" data-tab=${t}
			          class="${classPrefix}-tab-button gh-button text ${tab===t?"primary":"secondary"} icon">
				  ${svg}
			  </button>`};return`
			<div class="${classPrefix}-tabs">
				${Object.keys(Tabs).map(t=>renderTab(t,Tabs[t])).join("")}
			</div>`};const renderQuickSearch=()=>{return`
			<div id="groundhogg-toolbar-quick-search" class="${classPrefix}" tabindex="0"></div>`};const mountQuickSearch=()=>{const html=`
			<button type="button" class="dashicon-button ${classPrefix}-close">
				<span class="dashicons dashicons-no-alt"></span>
			</button>
			${renderTabs()}
			${userHasCap(Tabs[tab].cap)?Tabs[tab].view():""}`;$quickSearch.html(html);const setTab=t=>{tab=t;mountQuickSearch()};$(`.${classPrefix}-tab-button`).on("click",({currentTarget:currentTarget})=>{setTab(currentTarget.dataset.tab)});Tabs[tab].onMount({setTab:setTab});Object.keys(Tabs).forEach(t=>tooltip(`#gh-tab-${t}`,{content:Tabs[t].tooltip,position:"bottom"}));$quickSearch.css({top:Math.min(bottom,window.innerHeight-$quickSearch.height()-20),left:right-$quickSearch.outerWidth()});$(`.${classPrefix}-close`).on("click",()=>{close()})};const $quickSearch=$(renderQuickSearch());$("body").append($quickSearch).addClass("groundhogg-toolbar-quick-search-open");$quickSearch.on("keydown",({key:key})=>{switch(key){case"Esc":case"Escape":close();break}});mountQuickSearch()})})})(jQuery);