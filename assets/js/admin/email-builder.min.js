($=>{const{el:el,objectToStyle:objectToStyle,icons:icons,inputWithReplacements:inputWithReplacements,uuid:uuid,tinymceElement:tinymceElement,specialChars:specialChars,improveTinyMCE:improveTinyMCE,textarea:textarea,modal:modal,input:input,clickedIn:clickedIn,select:select,copyObject:copyObject}=Groundhogg.element;const{formatNumber:formatNumber,formatTime:formatTime,formatDate:formatDate,formatDateTime:formatDateTime}=Groundhogg.formatting;const{__:__,_x:_x,_n:_n,_nx:_nx,sprintf:sprintf}=wp.i18n;const{linkPicker:linkPicker}=Groundhogg.pickers;const{api:api}=Groundhogg;improveTinyMCE({height:400});let fontWeights=["400","500","600","700","normal","bold","bolder"];let fontFamilies={"Arial, sans-serif":"Arial","Arial Black, Arial, sans-serif":"Arial Black","Century Gothic, Times, serif":"Century Gothic","Courier, monospace":"Courier","Courier New, monospace":"Courier New","Geneva, Tahoma, Verdana, sans-serif":"Geneva","Georgia, Times, Times New Roman, serif":"Georgia","Helvetica, Arial, sans-serif":"Helvetica","Lucida, Geneva, Verdana, sans-serif":"Lucida","Tahoma, Verdana, sans-serif":"Tahoma","Times, Times New Roman, Baskerville, Georgia, serif":"Times","Times New Roman, Times, Georgia, serif":"Times New Roman","Verdana, Geneva, sans-serif":"Verdana"};let MAX_EMAIL_WITH=600;const createBlock=(type,props={})=>({id:uuid(),type:type,...copyObject(BlockRegistry.blocks[type].defaults),...props});const BlockEditor=(el,{email:email,onChange:onChange,emailControls:emailControls,emailControlsOnMount:emailControlsOnMount,scrollDepth:scrollDepth,onScroll:onScroll,onMount:onMount})=>({$el:$(el),email:email,init(){$("head").append(`<style id="builder-style" type="text/css"></style>`);this.blocks=email.meta.blocks?email.meta.blocks:[createBlock("text",{content:email.data.content})];this.scrollDepth=scrollDepth;this.render()},editingBlock:false,templates:{css:()=>{},blockControls:block=>`\n\t\t\t<div class="block-controls">\n\t\t\t\t<h3>${BlockRegistry.get(block.type).name}</h3>\n\t\t\t\t${BlockRegistry.controls(block)}\n\t\t\t</div>`,block:({type:type,name:name,svg:svg})=>`\n\t\t\t<div class="block-wrap">\n\t\t\t\t<div class="block new-block gh-panel" data-type="${type}">\n\t\t\t\t\t<div class="icon">\n\t\t\t\t\t\t${svg}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class="block-name">${name}</div>\n\t\t\t</div>\n        `,editor:()=>`\n\t\t\t<div id="email-block-editor">\n\t\t\t\t\x3c!-- BLOCKS --\x3e\n\t\t\t\t<div id="blocks-panel"></div>\n\t\t\t\t\x3c!-- CONTENT --\x3e\n\t\t\t\t<div id="content" class="gh-panel">\n\t\t\t\t\t<div class="inside">\n\t\t\t\t\t\t<div class="inline-label">\n\t\t\t\t\t\t\t<label for="subject">${__("Subject:","groundhogg")}</label>\n\t\t\t\t\t\t\t${inputWithReplacements({id:"subject",name:"subject",placeholder:"Subject line...",value:email.data.subject||""})}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class="inline-label">\n\t\t\t\t\t\t\t<label for="preview-text">${__("Preview:","groundhogg")}</label>\n\t\t\t\t\t\t\t${inputWithReplacements({id:"preview-text",name:"pre_header",placeholder:"Preview text...",value:email.data.pre_header||""})}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id="builder-content-wrap">\n\t\t\t\t\t\t<div id="builder-content"\n\t\t\t\t\t\t     class="inside sortable-blocks ${email.meta.alignment==="center"?"center":""}"></div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t\x3c!-- CONTROLS --\x3e\n\t\t\t\t<div id="controls-panel"></div>\n\t\t\t</div>`},render(){this.$el.html(this.templates.editor.call(this));this.onMount()},onMount(){const addBlock=(type,index=0,parent=false,column=0)=>{let newBlock=createBlock(type);__insertBlock(newBlock,index,this.blocks,parent,column);emailUpdated("addBlock");this.render()};const moveBlock=(blockId,index=0,parent=false,column=0)=>{let block=__findBlock(blockId,this.blocks);__deleteBlock(blockId,this.blocks);__insertBlock(block,index,this.blocks,parent,column);emailUpdated("moveBlock");this.render()};const duplicateBlock=blockId=>{let block=__findBlock(blockId,this.blocks);__insertAfter(__replaceId(copyObject(block)),blockId,this.blocks);emailUpdated("duplicateBlock");this.render()};const emailUpdated=where=>{console.log(where);onChange({css:renderBlocksCSS(this.blocks),html:renderBlocks(this.blocks,false),blocks:this.blocks})};const __updateBlocks=(blocks,edited)=>blocks.map((block=>{if(block.id===edited.id){return edited}if(block.type==="columns"){block.columns=block.columns.map((column=>__updateBlocks(column,edited)))}return block}));const __updateBlock=(blockId,props)=>{let block=__findBlock(blockId,this.blocks);block={...block,...props};this.blocks=__updateBlocks(this.blocks,block)};const updateBlock=(props,reRenderBlocks=true,reRenderEditor=false)=>{this.editingBlock={...this.editingBlock,...props};this.blocks=__updateBlocks(this.blocks,this.editingBlock);if(reRenderBlocks){renderBlockEditorBlocks()}if(reRenderEditor){this.render()}emailUpdated("updateBlock")};const curBlock=()=>this.editingBlock;const editBlock=blockId=>{this.editingBlock=__findBlock(blockId,this.blocks);this.render()};const getBlockId=e=>e.currentTarget.dataset.id;const deleteBlock=blockId=>{__deleteBlock(blockId,this.blocks);if(blockId===this.editingBlock.id){this.editingBlock=null}emailUpdated("deleteBlock");this.render()};const __deleteBlock=(blockId,blocks)=>{for(let block of blocks){if(block.id===blockId){blocks.splice(blocks.findIndex((b=>b.id===blockId)),1);return true}if(block.columns){for(let column of block.columns){if(__deleteBlock(blockId,column)){return true}}}}return false};const __replaceId=block=>{if(block.columns){console.log(block);block.columns=block.columns.map((column=>column.map((_block=>__replaceId(_block)))));console.log(block)}return{...block,id:uuid()}};const __insertAfter=(newBlock,blockId,blocks)=>{for(let block of blocks){if(block.id===blockId){blocks.splice(blocks.findIndex((b=>b.id===blockId))+1,0,newBlock);return true}if(block.columns){for(let column of block.columns){if(__insertAfter(newBlock,blockId,column)){return true}}}}return false};const __insertBlock=(newBlock,index=0,blocks=[],parent=false,column=0)=>{if(!parent){blocks.splice(index,0,newBlock);return true}for(let block of blocks){if(block.id===parent&&block.columns){return __insertBlock(newBlock,index,block.columns[column])}if(block.columns){for(let _column of block.columns){let inserted=__insertBlock(newBlock,index,_column,parent,column);if(inserted){return true}}}}return false};const __findBlock=(blockId,blocks)=>{for(let block of blocks){if(block.id===blockId){return block}if(block.columns){for(let column of block.columns){let found=__findBlock(blockId,column);if(found){return found}}}}return false};const getBlock=id=>__findBlock(id,this.blocks);this.$el.find("#blocks-panel").html(Object.values(BlockRegistry.blocks).map((b=>this.templates.block(b))));const renderBlockEditorBlocks=()=>{$("#builder-style").text(renderBlocksCSS(this.blocks));const sortableHelper=(e,$el)=>{let blockId=$el.data("id");let columnBlockId=$el.closest(".email-column").data("id");let column=$el.closest(".email-column").data("col");let block=getBlock(blockId,columnBlockId,column);return`\n\t\t\t<div class="block gh-panel" data-id="${blockId}">\n\t\t\t\t<div class="icon">\n\t\t\t\t\t${BlockRegistry.blocks[block.type].svg}\n\t\t\t\t</div>\n\t\t\t</div>`};this.$el.find("#builder-content").html(renderBlocks(this.blocks,this.editingBlock?this.editingBlock:null));this.$el.find("#builder-content-wrap").on("click",(e=>{if(!clickedIn(e,".builder-block")){editBlock(false)}}));$(".sortable-blocks").sortable({placeholder:"block-placeholder",connectWith:".sortable-blocks",handle:".move-block",helper:sortableHelper,cancel:"",tolerance:"pointer",start:(e,ui)=>{ui.helper.width(50);ui.helper.height(50)},cursorAt:{left:70,top:5},receive:(e,ui)=>{let parent=$(e.target).is(".column")?$(e.target).closest(".builder-block").data("id"):false;let column=parseInt(e.target.dataset.col);if(ui.item.is(".new-block")){let type=ui.item.data("type");let index=ui.helper.index();addBlock(type,index,parent,column);return}},update:(e,ui)=>{let parent=$(e.target).is(".column")?$(e.target).closest(".builder-block").data("id"):false;let column=parseInt(e.target.dataset.col);let blockId=ui.item.data("id");let index=ui.item.index();if(blockId){moveBlock(blockId,index,parent,column)}}});this.$el.find("#builder-content .builder-block").on("click",(e=>{let blockId=getBlockId(e);if(this.editingBlock&&blockId===this.editingBlock.id){return}if(clickedIn(e,"td.column .builder-block")&&$(e.currentTarget).data("type")==="columns"){return}editBlock(blockId)}));$(document).on("click","#builder-content a",(e=>{e.preventDefault()}));if(this.editingBlock){BlockRegistry.blocks[this.editingBlock.type].editOnMount({...this.editingBlock,updateBlock:updateBlock,curBlock:curBlock})}};this.$el.find("#blocks-panel .block").draggable({connectToSortable:".sortable-blocks",helper:"clone",revert:"invalid",revertDuration:0,start:(e,ui)=>{ui.helper.addClass("dragging")}});renderBlockEditorBlocks();$(".block-toolbar .delete-block").on("click",(e=>{deleteBlock($(e.target).closest(".builder-block").data("id"))}));$(".block-toolbar .duplicate-block").on("click",(e=>{duplicateBlock($(e.target).closest(".builder-block").data("id"))}));if(this.editingBlock){this.$el.find("#controls-panel").html(this.templates.blockControls(this.editingBlock));BlockRegistry.controlsOnMount({...this.editingBlock,updateBlock:updateBlock,curBlock:curBlock})}else{this.$el.find("#controls-panel").html(emailControls());emailControlsOnMount()}$(".control-group > .control-group-header").on("click",(e=>{$(".control-group:not(.closed)").toggleClass("closed").toggleClass("gh-panel");$(e.currentTarget).parent().toggleClass("closed").toggleClass("gh-panel")}));this.$el.find("#content").on("scroll",(e=>{this.scrollDepth=$(e.target).scrollTop();onScroll(this.scrollDepth)}));if(this.scrollDepth>0){this.$el.find("#content").scrollTop(this.scrollDepth)}onMount()}});const BlockRegistry={isDynamic(block){return this.get(block.type).dynamic},get(type){return this.blocks[type]},css(block){return this.get(block.type).css({...this.defaults(block),...block})},edit(block,editing){if(this.isDynamic(block)){this.fetchDynamicContent(block)}return this.get(block.type).edit({...this.defaults(block),...block},editing)},defaults({type:type}){return this.get(type).defaults},editOnMount({type:type,...props}){return this.get(type).editOnMount(props)},__fetchDynamicContent(block){return api.post(`${api.routes.v4.emails}/blocks/${block.type}`,{props:block})},fetchDynamicContent(block){if(block.html){return}this.__fetchDynamicContent(block).then((({html:html,css:css=""})=>{block.html=html;block.css=css;$(`[data-id="${block.id}"]`).html(html)}))},html(block,editing){if(this.isDynamic(block)){this.fetchDynamicContent(block)}return this.get(block.type).html({...this.defaults(block),...block},editing)},controls(block){return this.get(block.type).controls({...this.defaults(block),...block})},controlsOnMount({type:type,...props}){return this.get(type).controlsOnMount({type:type,...this.defaults({type:type}),...props})},collections:{core:"Groundhogg"},blocks:{}};const blockToolbar=()=>`\n\t\t<div class="block-toolbar">\n\t\t\t<button class="gh-button secondary small text icon move-block" style="color: #fff">${icons.move}</button>\n\t\t\t<button class="gh-button secondary small text icon duplicate-block" style="color: #fff">${icons.duplicate}\n\t\t\t</button>\n\t\t\t<button class="gh-button secondary small text icon delete-block" style="color: #fff">${icons.close}</button>\n\t\t</div>`;const blockWrapper=(block,editing)=>`\n\t\t<div class="builder-block" data-id="${block.id}" data-type="${block.type}">\n\t\t\t${BlockRegistry.html(block,editing)}\n\t\t\t${editing===false?"":blockToolbar()}\n\t\t</div>`;const editBlockWrapper=(block,editing)=>`\n\t\t<div class="builder-block is-editing" data-id="${block.id}" data-type="${block.type}">\n\t\t\t${BlockRegistry.edit(block,editing)}\n\t\t\t${blockToolbar()}\n\t\t</div>`;const renderBlocksCSS=blocks=>blocks.filter((b=>b.type)).map((b=>BlockRegistry.css(b))).join("");const renderBlocks=(blocks,editing)=>blocks.filter((b=>b.type)).map((b=>editing&&editing.id===b.id?editBlockWrapper(b,editing):blockWrapper(b,editing))).join("");const registerBlock=(type,name,block,collection="core")=>{BlockRegistry.blocks[type]={type:type,name:name,collection:collection,...block}};const registerDynamicBlock=(type,name,block,collection="core")=>{const{svg:svg,controls:controls,controlsOnMount:controlsOnMount,defaults:defaults}=block;BlockRegistry.blocks[type]={type:type,name:name,collection:collection,svg:svg,dynamic:true,edit:({html:html=""})=>html,editOnMount:({})=>{},controls:props=>controls(props),controlsOnMount:({updateBlock:updateBlock,curBlock:curBlock,...rest})=>{controlsOnMount({...rest,curBlock:curBlock,updateBlock:(props,a,b)=>{BlockRegistry.__fetchDynamicContent({...curBlock(),...props}).then((({html:html,css:css=""})=>{updateBlock({html:html,css:css,...props},a,b)}))}})},css:()=>"",html:({id:id,html:html},editing)=>editing===false?`\x3c!-- ${type}:${id} --\x3e`:html,defaults:{html:"",css:"",...defaults}}};const registerBlockCollection=(collection,name)=>{BlockRegistry.collections[collection]=name};const Column=({blocks:blocks,editing:editing,width:width,col:col,padding:padding})=>`\n\t\t<td align="center" valign="top" width="${width}%">\n\t\t\t<div class="column sortable-blocks ${blocks.length?"":"empty"}"\n\t\t\t     data-col="${col}">\n\t\t\t\t${renderBlocks(blocks,editing)}\n\t\t\t</div>\n\t\t</td>`;const columnLayouts={three_columns:(columns,editing)=>[0,1,2].map((i=>Column({blocks:columns[i],editing:editing,width:33.3333,col:i}))).join(""),two_columns:(columns,editing)=>[0,1].map((i=>Column({blocks:columns[i],editing:editing,width:50,col:i}))).join(""),two_columns_right:(columns,editing)=>[66.666,33.333].map(((w,i)=>Column({blocks:columns[i],editing:editing,width:w,col:i}))).join(""),two_columns_left:(columns,editing)=>[33.333,66.666].map(((w,i)=>Column({blocks:columns[i],editing:editing,width:w,col:i}))).join("")};registerBlock("columns",__("Columns"),{svg:`\n\t\t<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 426.667 426.667"\n\t\t     style="enable-background:new 0 0 426.667 426.667" xml:space="preserve"><path d="M384 21.333h-42.667c-23.552 0-42.667 19.157-42.667 42.667v298.667c0 23.531 19.115 42.667 42.667 42.667H384c23.552 0 42.667-19.136 42.667-42.667V64c0-23.509-19.115-42.667-42.667-42.667zM234.667 21.333H192c-23.552 0-42.667 19.157-42.667 42.667v298.667c0 23.531 19.115 42.667 42.667 42.667h42.667c23.552 0 42.667-19.136 42.667-42.667V64c-.001-23.509-19.115-42.667-42.667-42.667zM85.333 21.333H42.667C19.136 21.333 0 40.491 0 64v298.667c0 23.531 19.136 42.667 42.667 42.667h42.667c23.531 0 42.667-19.136 42.667-42.667V64C128 40.491 108.864 21.333 85.333 21.333z"/></svg>`,controls:({layout:layout="two_columns"})=>{const layoutChoices={three_columns:`<svg xmlns="http://www.w3.org/2000/svg" viewBox="23.085 13.971 499.999 150"><path d="M28.085 13.971h143.333a5 5 0 0 1 5 5v240a5 5 0 0 1-5 5H28.085a5 5 0 0 1-5-5v-240a5 5 0 0 1 5-5ZM201.418 13.971h143.333a5 5 0 0 1 5 5v240a5 5 0 0 1-5 5H201.418a5 5 0 0 1-5-5v-240a5 5 0 0 1 5-5ZM374.751 13.971h143.333a5 5 0 0 1 5 5v240a5 5 0 0 1-5 5H374.751a5 5 0 0 1-5-5v-240a5 5 0 0 1 5-5Z" transform="matrix(1 0 0 .6 0 5.588)"/></svg>`,two_columns:`<svg xmlns="http://www.w3.org/2000/svg" viewBox="569.217 10.755 500 150"><path d="M574.217 10.755h230a5 5 0 0 1 5 5v240a5 5 0 0 1-5 5h-230a5 5 0 0 1-5-5v-240a5 5 0 0 1 5-5ZM834.217 10.755h230a5 5 0 0 1 5 5v240a5 5 0 0 1-5 5h-230a5 5 0 0 1-5-5v-240a5 5 0 0 1 5-5Z" transform="matrix(1 0 0 .6 0 4.302)"/></svg>`,two_columns_right:`<svg xmlns="http://www.w3.org/2000/svg" viewBox="24.417 277.63 499.999 150"><path d="M29.417 277.63h316.667a5 5 0 0 1 5 5v240a5 5 0 0 1-5 5H29.417a5 5 0 0 1-5-5v-240a5 5 0 0 1 5-5ZM376.083 277.63h143.333a5 5 0 0 1 5 5v240a5 5 0 0 1-5 5H376.083a5 5 0 0 1-5-5v-240a5 5 0 0 1 5-5Z" transform="matrix(1 0 0 .6 0 111.052)"/></svg>`,two_columns_left:`<svg xmlns="http://www.w3.org/2000/svg" viewBox="568.076 279.146 500 150"><path d="M746.409 279.146h316.667a5 5 0 0 1 5 5v240a5 5 0 0 1-5 5H746.409a5 5 0 0 1-5-5v-240a5 5 0 0 1 5-5ZM573.076 279.146h143.333a5 5 0 0 1 5 5v240a5 5 0 0 1-5 5H573.076a5 5 0 0 1-5-5v-240a5 5 0 0 1 5-5Z" transform="matrix(1 0 0 .6 0 111.658)"/></svg>`};return`\n\t\t  <div class="control-group gh-panel">\n\t\t\t  <div class="control-group-header space-between">\n\t\t\t\t  <h4 class="control-group-name">${__("Layout")}</h4>\n\t\t\t\t  <span class="dashicons dashicons-arrow-down-alt2"></span>\n\t\t\t  </div>\n\t\t\t  <div class="controls">\n\t\t\t\t  <div class="control layouts">\n\t\t\t\t\t  ${Object.keys(layoutChoices).map((k=>`<button class="layout-choice ${layout===k?"selected":""}" data-layout="${k}">${layoutChoices[k]}</button>`)).join("")}\n\t\t\t\t  </div>\n\t\t\t  </div>\n\t\t  </div>\n      `},controlsOnMount:({updateBlock:updateBlock})=>{$(".layout-choice").on("click",(e=>{updateBlock({layout:e.currentTarget.dataset.layout},false,true)}))},edit:({id:id,columns:columns,style:style,layout:layout="two_columns"},editing)=>`\n\t\t  <table class="email-columns" border="0" cellpadding="0" cellspacing="0" width="100%">\n\t\t\t  <tr>\n\t\t\t\t  ${columnLayouts[layout](columns,editing)}\n\t\t\t  </tr>\n\t\t  </table>\n      `,css:({columns:columns})=>`${columns.map((col=>col.length?renderBlocksCSS(col):"")).join("")}`,editOnMount:()=>{},html:({id:id,columns:columns,style:style,layout:layout="two_columns"},editing)=>`\n\t\t  <table class="email-columns" border="0" cellpadding="0" cellspacing="0" width="100%">\n\t\t\t  <tr>\n\t\t\t\t  ${columnLayouts[layout](columns,editing)}\n\t\t\t  </tr>\n\t\t  </table>\n      `,defaults:{layout:"two_columns",columns:[[],[],[]]}});registerBlock("text",__("Text"),{svg:`\n\t\t<svg xmlns="http://www.w3.org/2000/svg" style="enable-background:new 0 0 977.7 977.7" xml:space="preserve"\n\t\t     viewBox="0 0 977.7 977.7"><path d="M770.7 930.6v-35.301c0-23.398-18-42.898-41.3-44.799-17.9-1.5-35.8-3.1-53.7-5-34.5-3.6-72.5-7.4-72.5-50.301L603 131.7c136-2 210.5 76.7 250 193.2 6.3 18.7 23.8 31.3 43.5 31.3h36.2c24.9 0 45-20.1 45-45V47.1c0-24.9-20.1-45-45-45H45c-24.9 0-45 20.1-45 45v264.1c0 24.9 20.1 45 45 45h36.2c19.7 0 37.2-12.6 43.5-31.3 39.4-116.5 114-195.2 250-193.2l-.3 663.5c0 42.9-38 46.701-72.5 50.301-17.9 1.9-35.8 3.5-53.7 5-23.3 1.9-41.3 21.4-41.3 44.799v35.3c0 24.9 20.1 45 45 45h473.8c24.8 0 45-20.199 45-45z"/></svg>`,controls:({p:p,h1:h1,h2:h2,h3:h3})=>{const textControlGroup=(name,tag,style,open=false)=>`\n\t\t\t<div class="control-group ${open?"gh-panel":"closed"}">\n\t\t\t\t<div class="control-group-header space-between">\n\t\t\t\t\t<h4 class="control-group-name">${name}</h4>\n\t\t\t\t\t<span class="dashicons dashicons-arrow-down-alt2"></span>\n\t\t\t\t</div>\n\t\t\t\t<div class="controls">\n\t\t\t\t\t<div class="space-between">\n\t\t\t\t\t\t<label for="font-size" class="control-label">${__("Font Size","groundhogg")}</label>\n\t\t\t\t\t\t${input({type:"number",id:"font-size",name:"fontSize",className:"font-control control-input",dataTag:tag,value:style.fontSize})}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="space-between">\n\t\t\t\t\t\t<label for="font-weight" class="control-label">${__("Font Weight","groundhogg")}</label>\n\t\t\t\t\t\t${select({id:"font-weight",name:"fontWeight",className:"font-control control-input",dataTag:tag},fontWeights.map((i=>({value:i,text:i}))),style.fontWeight)}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="space-between">\n\t\t\t\t\t\t<label id="font-family" class="control-label">${__("Font Family","groundhogg")}</label>\n\t\t\t\t\t\t${select({id:"font-family",name:"fontFamily",className:"font-control control-input",dataTag:tag},fontFamilies,style.fontFamily)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>`;return`${textControlGroup(__("Paragraphs"),"p",p,true)}\n      ${textControlGroup(__("Heading 1"),"h1",h1)}\n      ${textControlGroup(__("Heading 2"),"h2",h2)}\n      ${textControlGroup(__("Heading 3"),"h3",h3)}`},controlsOnMount:({updateBlock:updateBlock,curBlock:curBlock})=>{$(".font-control").on("change",(({target:target})=>{let tag=target.dataset.tag;updateBlock({[tag]:{...curBlock()[tag],[target.name]:target.value}})}))},edit:({id:id,content:content})=>`\n\t\t  <div class="maybe-edit-text" style="text-align: left">\n\t\t\t  ${content}\n\t\t\t  <button class="gh-button primary edit-text-content">${__("Edit Content","groundhogg")}</button>\n\t\t  </div>`,editOnMount:({id:id,content:content,updateBlock:updateBlock,curBlock:curBlock})=>{$(`[data-id=${id}] .edit-text-content`).on("click",(e=>{modal({content:textarea({value:curBlock().content,id:`text-${id}`}),width:600,onOpen:()=>{tinymceElement(`text-${id}`,{tinymce:true,quicktags:true,settings:{height:800}},(content=>{updateBlock({content:content})}))},beforeClose:()=>{wp.editor.remove(`text-${id}`);return true}})}))},css:({id:id,p:p,h1:h1,h2:h2,h3:h3})=>`\n          [data-id="${id}"] * {\n              ${objectToStyle(p)}\n          }\n\n          [data-id="${id}"] ul {\n              list-style: disc;\n              padding-left: 20px;\n          }\n\n          [data-id="${id}"] h1 {\n              ${objectToStyle(h1)}\n          }\n\n          [data-id="${id}"] h2 {\n              ${objectToStyle(h2)}\n          }\n\n          [data-id="${id}"] h3 {\n              ${objectToStyle(h3)}\n          }\n      `,html:({content:content})=>`\n\t\t  <div style="text-align: left">\n\t\t\t  ${content}\n\t\t  </div>`,defaults:{content:`<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin egestas dolor non nulla varius, id fermentum ante euismod. Ut a sodales nisl, at maximus felis. Suspendisse potenti. Etiam fermentum magna nec diam lacinia, ut volutpat mauris accumsan. Nunc id convallis magna. Ut eleifend sem aliquet, volutpat sapien quis, condimentum leo.</p>`,p:{fontSize:16,fontWeight:"normal",fontFamily:"Arial, sans-serif"},h1:{fontSize:52,fontWeight:"500",fontFamily:"Arial, sans-serif"},h2:{fontSize:36,fontWeight:"500",fontFamily:"Arial, sans-serif"},h3:{fontSize:24,fontWeight:"500",fontFamily:"Arial, sans-serif"}}});registerBlock("image",__("Image"),{svg:icons.image,controls:({src:src,width:width,alt:alt,title:title,align:align="center"})=>`\n\t\t  <div class="control-group gh-panel">\n\t\t\t  <div class="control-group-header space-between">\n\t\t\t\t  <h4 class="control-group-name">${__("Content")}</h4>\n\t\t\t\t  <span class="dashicons dashicons-arrow-down-alt2"></span>\n\t\t\t  </div>\n\t\t\t  <div class="controls">\n\t\t\t\t  <div class="control">\n\t\t\t\t\t  <label for="image-src" class="control-label">${__("Image SRC","groundhogg")}</label>\n\t\t\t\t\t  <div class="gh-input-group">\n\t\t\t\t\t\t  ${input({type:"text",id:"image-src",value:src,className:"control full-width",name:"src"})}\n\t\t\t\t\t\t  <button class="gh-button secondary icon" id="select-image">\n\t\t\t\t\t\t\t  ${icons.image}\n\t\t\t\t\t\t  </button>\n\t\t\t\t\t  </div>\n\t\t\t\t  </div>\n\t\t\t\t  <div class="control">\n\t\t\t\t\t  <label for="image-alt" class="control-label">${__("Alt Text","groundhogg")}</label>\n\t\t\t\t\t  ${input({type:"text",id:"image-alt",className:"control full-width",name:"alt",value:alt})}\n\t\t\t\t  </div>\n\t\t\t\t  <div class="control">\n\t\t\t\t\t  <label for="image-title" class="control-label">${__("Title","groundhogg")}</label>\n\t\t\t\t\t  ${input({type:"text",id:"image-title",className:"control full-width",name:"title",value:title})}\n\t\t\t\t  </div>\n\t\t\t\t  <div class="control space-between">\n\t\t\t\t\t  <label class="">${__("Alignment","groundhogg")}</label>\n\t\t\t\t\t  <div class="gh-input-group">\n\t\t\t\t\t\t  <button id="align-left" data-alignment="left"\n\t\t\t\t\t\t          class="change-alignment gh-button ${align==="left"?"primary":"secondary"}">\n\t\t\t\t\t\t\t  ${icons.alignLeft}\n\t\t\t\t\t\t  </button>\n\t\t\t\t\t\t  <button id="align-center" data-alignment="center"\n\t\t\t\t\t\t          class="change-alignment gh-button ${align==="center"?"primary":"secondary"}">\n\t\t\t\t\t\t\t  ${icons.alignCenter}\n\t\t\t\t\t\t\t  <button id="align-right" data-alignment="center"\n\t\t\t\t\t\t\t          class="change-alignment gh-button ${align==="right"?"primary":"secondary"}">\n\t\t\t\t\t\t\t\t  ${icons.alignRight}\n\t\t\t\t\t\t\t  </button>\n\t\t\t\t\t  </div>\n\t\t\t\t  </div>\n\t\t\t  </div>\n\t\t  </div>\n      `,css:()=>"",controlsOnMount:({updateBlock:updateBlock})=>{$("#align-left").on("click",(()=>{updateBlock({align:"left"},false,true)}));$("#align-center").on("click",(()=>{updateBlock({align:"center"},false,true)}));$("#align-right").on("click",(()=>{updateBlock({align:"right"},false,true)}));$("#image-src,#image-alt,#image-title").on("change",(e=>{updateBlock({[e.target.name]:e.target.value})}));var file_frame;$("#select-image").on("click",(event=>{var picker=$(this);event.preventDefault();if(file_frame){file_frame.open();return}file_frame=wp.media.frames.file_frame=wp.media({title:__("Select a image to upload"),button:{text:__("Use this image")},multiple:false});file_frame.on("select",(function(){var attachment=file_frame.state().get("selection").first().toJSON();console.log(attachment);let{height:height,width:width}=attachment;if(width>MAX_EMAIL_WITH){let ratio=height/width;width=MAX_EMAIL_WITH;height=width*ratio}updateBlock({src:attachment.url,alt:attachment.alt,title:attachment.title,width:width},false,true)}));file_frame.open()}))},edit:({src:src,width:width,height:height,alt:alt="",title:title="",align:align="center"})=>`\n\t\t  <div class="img-container" style="width: 100%;text-align: ${align}">\n\t\t\t  <img alt="${specialChars(alt)}" title="${specialChars(title)}" width="${width}" height="auto"\n\t\t\t       src="${src}" style="vertical-align: bottom"/>\n\t\t  </div>`,editOnMount:({id:id,updateBlock:updateBlock})=>{let $img=$(`[data-id=${id}] img`);setTimeout((()=>{$img.resizable({aspectRatio:true,maxWidth:600,stop:(e,ui)=>{updateBlock({width:ui.size.width})}})}),100)},html:({src:src,width:width,height:height,alt:alt="",title:title="",align:align="center"})=>`\n\t\t  <div class="img-container" style="text-align: ${align}">\n\t\t\t  <img alt="${specialChars(alt)}" title="${specialChars(title)}" width="${width}" height="auto"\n\t\t\t       src="${src}" style="vertical-align: bottom"/>\n\t\t  </div>`,defaults:{src:"http://via.placeholder.com/600x338",alt:"placeholder image",title:"placeholder image",width:MAX_EMAIL_WITH,height:338,align:"center"}});registerBlock("spacer",__("Spacer"),{svg:`\n\t\t<svg xmlns="http://www.w3.org/2000/svg" xml:space="preserve" viewBox="0 0 512 512">\n  <path color="currentColor"\n        d="M352 384h-48V128h48a16 16 0 0 0 11-27L267 5c-6-7-16-7-22 0l-96 96c-5 4-6 11-4 17 3 6 9 10 15 10h48v256h-48a16 16 0 0 0-11 27l96 96c6 7 16 7 22 0l96-96a16 16 0 0 0-11-27z"/>\n</svg>`,controls:({height:height})=>`\n\t\t  <div class="control-group">\n\t\t\t  <div class="control-group-header space-between">\n\t\t\t\t  <h4 class="control-group-name">${__("Settings")}</h4>\n\t\t\t\t  <span class="dashicons dashicons-arrow-down-alt2"></span>\n\t\t\t  </div>\n\t\t\t  <div class="controls">\n\t\t\t\t  <div class="space-between">\n\t\t\t\t\t  <label for="font-size" class="control-label">${__("Height","groundhogg")}</label>\n\t\t\t\t\t  ${input({type:"number",id:"height",name:"height",className:"control-input",value:height})}\n\t\t\t\t  </div>\n\t\t\t  </div>\n\t\t  </div>`,controlsOnMount:({updateBlock:updateBlock,curBlock:curBlock})=>{$("#height").on("change",(({target:target})=>{updateBlock({height:target.value})}))},edit:({id:id,height:height})=>`\n\t\t  <div class="spacer-block" style="height: ${height}px">\n\t\t  </div>`,editOnMount:({id:id,height:height,updateBlock:updateBlock,curBlock:curBlock})=>{},css:({height:height})=>"",html:({height:height})=>`\n\t      <div style="height: ${height}px">\n\t      </div>`,defaults:{height:100}});registerBlock("button",__("Button"),{svg:`\n\t\t<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16">\n\t\t\t<path fill="#444"\n\t\t\t      d="m15.7 5.3-1-1c-.2-.2-.4-.3-.7-.3H1c-.6 0-1 .4-1 1v5c0 .3.1.6.3.7l1 1c.2.2.4.3.7.3h13c.6 0 1-.4 1-1V6c0-.3-.1-.5-.3-.7zM14 10H1V5h13v5z"/>\n\t\t</svg>`,controls:({text:text,link:link,style:style,align:align,size:size})=>`\n\t\t  <div class="control-group gh-panel">\n\t\t\t  <div class="control-group-header space-between">\n\t\t\t\t  <h4 class="control-group-name">${__("Content")}</h4>\n\t\t\t\t  <span class="dashicons dashicons-arrow-down-alt2"></span>\n\t\t\t  </div>\n\t\t\t  <div class="controls">\n\t\t\t\t  <div class="control">\n\t\t\t\t\t  <label class="control-label">${__("Button Text","groundhogg")}</label>\n\t\t\t\t\t  ${inputWithReplacements({type:"text",id:"button-text",className:"full-width",value:text})}\n\t\t\t\t  </div>\n\t\t\t\t  <div class="control">\n\t\t\t\t\t  <label class="control-label">${__("Button Link","groundhogg")}</label>\n\t\t\t\t\t  ${inputWithReplacements({type:"text",id:"button-link",className:"full-width",value:link})}\n\t\t\t\t  </div>\n\t\t\t\t  <div class="space-between">\n\t\t\t\t\t  <label class="control-label">${__("Button Size","groundhogg")}</label>\n\t\t\t\t\t  ${select({name:"size",id:"button-size"},{sm:__("Small"),md:__("Medium"),lg:__("Large")},size)}\n\t\t\t\t  </div>\n\t\t\t\t  <div class="control space-between">\n\t\t\t\t\t  <label class="">${__("Alignment","groundhogg")}</label>\n\t\t\t\t\t  <div class="gh-input-group">\n\t\t\t\t\t\t  <button id="align-left" data-alignment="left"\n\t\t\t\t\t\t          class="change-alignment gh-button ${align==="left"?"primary":"secondary"}">\n\t\t\t\t\t\t\t  ${icons.alignLeft}\n\t\t\t\t\t\t  </button>\n\t\t\t\t\t\t  <button id="align-center" data-alignment="center"\n\t\t\t\t\t\t          class="change-alignment gh-button ${align==="center"?"primary":"secondary"}">\n\t\t\t\t\t\t\t  ${icons.alignCenter}\n\t\t\t\t\t\t\t  <button id="align-right" data-alignment="right"\n\t\t\t\t\t\t\t          class="change-alignment gh-button ${align==="right"?"primary":"secondary"}">\n\t\t\t\t\t\t\t\t  ${icons.alignRight}\n\t\t\t\t\t\t\t  </button>\n\t\t\t\t\t  </div>\n\t\t\t\t  </div>\n\t\t\t  </div>\n\t\t  </div>\n\t\t  <div class="control-group closed">\n\t\t\t  <div class="control-group-header space-between">\n\t\t\t\t  <h4 class="control-group-name">${__("Button Style")}</h4>\n\t\t\t\t  <span class="dashicons dashicons-arrow-down-alt2"></span>\n\t\t\t  </div>\n\t\t\t  <div class="controls">\n\t\t\t\t  <div class="space-between">\n\t\t\t\t\t  <label class="control-label">${__("Button Color","groundhogg")}</label>\n\t\t\t\t\t  ${input({type:"text",id:"button-color",value:style.backgroundColor})}\n\t\t\t\t  </div>\n\t\t\t\t  <div class="space-between">\n\t\t\t\t\t  <label class="control-label">${__("Text Color","groundhogg")}</label>\n\t\t\t\t\t  ${input({type:"text",id:"text-color",value:style.color})}\n\t\t\t\t  </div>\n\t\t\t  </div>\n\t\t  </div>\n\t\t  <div class="control-group closed">\n\t\t\t  <div class="control-group-header space-between">\n\t\t\t\t  <h4 class="control-group-name">${__("Font Style")}</h4>\n\t\t\t\t  <span class="dashicons dashicons-arrow-down-alt2"></span>\n\t\t\t  </div>\n\t\t\t  <div class="controls">\n\t\t\t\t  <div class="space-between">\n\t\t\t\t\t  <label for="font-size" class="control-label">${__("Font Size","groundhogg")}</label>\n\t\t\t\t\t  ${input({type:"number",id:"font-size",name:"fontSize",className:"font-control control-input",value:style.fontSize})}\n\t\t\t\t  </div>\n\t\t\t\t  <div class="space-between">\n\t\t\t\t\t  <label for="font-weight" class="control-label">${__("Font Weight","groundhogg")}</label>\n\t\t\t\t\t  ${select({id:"font-weight",name:"fontWeight",className:"font-control control-input"},fontWeights.map((i=>({value:i,text:i}))),style.fontWeight)}\n\t\t\t\t  </div>\n\t\t\t\t  <div class="space-between">\n\t\t\t\t\t  <label for="font-family" class="control-label">${__("Font Family","groundhogg")}</label>\n\t\t\t\t\t  ${select({id:"font-family",name:"fontFamily",className:"font-control control-input"},fontFamilies,style.fontFamily)}\n\t\t\t\t  </div>\n\t\t\t  </div>\n\t\t  </div>`,controlsOnMount:({updateBlock:updateBlock,curBlock:curBlock})=>{$("#align-left").on("click",(()=>{updateBlock({align:"left"},false,true)}));$("#align-center").on("click",(()=>{updateBlock({align:"center"},false,true)}));$("#align-right").on("click",(()=>{updateBlock({align:"right"},false,true)}));$("#button-color").wpColorPicker({width:200,change:(e,ui)=>{updateBlock({style:{...curBlock().style,backgroundColor:ui.color.toString()}})}});$("#text-color").wpColorPicker({width:200,change:(e,ui)=>{updateBlock({style:{...curBlock().style,color:ui.color.toString()}})}});$("#button-text").on("change",(e=>{updateBlock({text:e.target.value})}));linkPicker("#button-link").on("change",(e=>{updateBlock({link:e.target.value})}));$("#button-size").on("change",(e=>{updateBlock({size:e.target.value})}));$(".font-control").on("change",(({target:target})=>{updateBlock({style:{...curBlock().style,[target.name]:target.value}})}))},edit:({text:text,align:align,style:style,size:size})=>{let padding;switch(size){case"sm":padding="8px 12px";break;case"md":padding="12px 18px";break;case"lg":padding="16px 24px";break}return`\n\t\t  <table width="100%" border="0" cellspacing="0" cellpadding="0">\n\t\t\t  <tbody>\n\t\t\t  <tr>\n\t\t\t\t  <td align="${align}">\n\t\t\t\t\t  <table border="0" cellspacing="0" cellpadding="0">\n\t\t\t\t\t\t  <tbody>\n\t\t\t\t\t\t  <tr>\n\t\t\t\t\t\t\t  <td class="email-button" bgcolor="${style.backgroundColor}"\n\t\t\t\t\t\t\t      style="padding: ${padding}; border-radius:3px" align="center">\n\t\t\t\t\t\t\t\t  <a contenteditable="true" target="_blank"\n\t\t\t\t\t\t\t\t     style="font-size: ${style.fontSize}px; font-family: ${style.fontFamily}; font-weight: ${style.fontWeight}; color: ${style.color}; text-decoration: none !important; display: inline-block;">${text}</a>\n\t\t\t\t\t\t\t  </td>\n\t\t\t\t\t\t  </tr>\n\t\t\t\t\t\t  </tbody>\n\t\t\t\t\t  </table>\n\t\t\t\t  </td>\n\t\t\t  </tr>\n\t\t\t  </tbody>\n\t\t  </table>`},editOnMount:({id:id,updateStyle:updateStyle,updateBlock:updateBlock})=>{$(`[data-id=${id}] .email-button a`).on("keyup keydown",(e=>{updateBlock({text:e.currentTarget.textContent},false)}))},css:({id:id,style:style})=>{let{color:color,backgroundColor:backgroundColor}=style;return`\n\n          [data-id="${id}"] a {\n              ${objectToStyle({display:"inline-block",color:color,backgroundColor:backgroundColor,padding:"8px 12px"})}\n          }\n\n      `},html:({link:link,size:size,text:text,align:align="center",style:style={}})=>{let padding;switch(size){case"sm":padding="8px 12px";break;case"md":padding="12px 18px";break;case"lg":padding="16px 24px";break}return`\n\t\t  <table width="100%" border="0" cellspacing="0" cellpadding="0">\n\t\t\t  <tbody>\n\t\t\t  <tr>\n\t\t\t\t  <td align="${align}">\n\t\t\t\t\t  <table border="0" cellspacing="0" cellpadding="0">\n\t\t\t\t\t\t  <tbody>\n\t\t\t\t\t\t  <tr>\n\t\t\t\t\t\t\t  <td class="email-button" bgcolor="${style.backgroundColor}"\n\t\t\t\t\t\t\t      style="padding: ${padding}; border-radius:3px" align="center"><a href="${link}"\n\t\t\t\t\t\t\t                                                                       target="_blank"\n\t\t\t\t\t\t\t                                                                       style="font-size: ${style.fontSize}px; font-family: ${style.fontFamily}; font-weight: ${style.fontWeight}; color: ${style.color}; text-decoration: none !important; display: inline-block;">${text}</a>\n\t\t\t\t\t\t\t  </td>\n\t\t\t\t\t\t  </tr>\n\t\t\t\t\t\t  </tbody>\n\t\t\t\t\t  </table>\n\t\t\t\t  </td>\n\t\t\t  </tr>\n\t\t\t  </tbody>\n\t\t  </table>`},defaults:{link:Groundhogg.url.home,align:"center",text:"Click me!",size:"md",style:{backgroundColor:"#dd3333",color:"#ffffff",fontSize:20,fontWeight:"600",fontFamily:"Arial, sans-serif"}}});registerDynamicBlock("posts",__("Posts"),{svg:`\n\t\t<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 193.826 193.826"\n\t\t     style="enable-background:new 0 0 193.826 193.826" xml:space="preserve"><path d="M191.495 55.511 137.449 1.465a4.998 4.998 0 0 0-7.07 0l-.229.229a17.43 17.43 0 0 0-5.14 12.406c0 3.019.767 5.916 2.192 8.485l-56.55 48.533c-4.328-3.868-9.852-5.985-15.703-5.985a23.444 23.444 0 0 0-16.689 6.913l-.339.339a4.998 4.998 0 0 0 0 7.07l32.378 32.378-31.534 31.533c-.631.649-15.557 16.03-25.37 28.27-9.345 11.653-11.193 13.788-11.289 13.898a4.995 4.995 0 0 0 .218 6.822 4.987 4.987 0 0 0 3.543 1.471c1.173 0 2.349-.41 3.295-1.237.083-.072 2.169-1.885 13.898-11.289 12.238-9.813 27.619-24.74 28.318-25.421l31.483-31.483 30.644 30.644c.976.977 2.256 1.465 3.535 1.465s2.56-.488 3.535-1.465l.339-.339a23.446 23.446 0 0 0 6.913-16.689 23.43 23.43 0 0 0-5.985-15.703l48.533-56.55a17.434 17.434 0 0 0 8.485 2.192c4.687 0 9.093-1.825 12.406-5.14l.229-.229a5 5 0 0 0 0-7.072z"/></svg>`,controls:({query:query={}})=>{const{numberposts:numberposts=5}=query;return`\n\t\t  <div class="control-group gh-panel">\n\t\t\t  <div class="control-group-header space-between">\n\t\t\t\t  <h4 class="control-group-name">${__("Query")}</h4>\n\t\t\t\t  <span class="dashicons dashicons-arrow-down-alt2"></span>\n\t\t\t  </div>\n\t\t\t  <div class="controls">\n\t\t\t\t  <div class="control">\n\t\t\t\t\t  <div class="space-between">\n\t\t\t\t\t\t  <label for="number-posts" class="control-label">${__("Number of posts","groundhogg")}</label>\n\t\t\t\t\t\t  ${input({type:"number",id:"number-posts",value:numberposts,className:"control-input query-control",name:"numberposts"})}\n\t\t\t\t\t  </div>\n\t\t\t\t  </div>\n\t\t\t  </div>\n\t\t  </div>\n      `},controlsOnMount:({updateBlock:updateBlock,curBlock:curBlock})=>{$(".query-control").on("change",(e=>{updateBlock({query:{...curBlock().query,[e.target.name]:e.target.value}})}))},defaults:{query:{numberposts:5}}});Groundhogg.EmailBlockEditor=BlockEditor})(jQuery);