($=>{const{searchOptionsWidget:searchOptionsWidget,regexp:regexp,specialChars:specialChars,modal:modal,input:input,loadingDots:loadingDots,copyObject:copyObject,objectEquals:objectEquals,moreMenu:moreMenu,select:select,dangerConfirmationModal:dangerConfirmationModal,confirmationModal:confirmationModal,clickInsideElement:clickInsideElement,progressBar:progressBar,dialog:dialog,bold:bold,tooltip:tooltip,button:button,infoCard:infoCard,el:el,icons:icons,adminPageURL:adminPageURL}=Groundhogg.element;const{post:post,get:get,patch:patch,routes:routes,ajax:ajax}=Groundhogg.api;const{searches:SearchesStore,contacts:ContactsStore,tags:TagsStore,funnels:FunnelsStore}=Groundhogg.stores;const{tagPicker:tagPicker,funnelPicker:funnelPicker}=Groundhogg.pickers;const{userHasCap:userHasCap}=Groundhogg.user;const{formatNumber:formatNumber,formatTime:formatTime,formatDate:formatDate,formatDateTime:formatDateTime}=Groundhogg.formatting;const{sprintf:sprintf,__:__,_x:_x,_n:_n}=wp.i18n;const{InfoCard:InfoCard,InfoCardProvider:InfoCardProvider}=Groundhogg.utils;const{contact:contact}=GroundhoggContact;const PrimaryInfoCards=InfoCardProvider({cards:[InfoCard("basic-details",{title:({data:data})=>sprintf(__("About %1$s %2$s","groundhogg"),data.first_name,data.last_name),content:contact=>`<p>${contact.data.email}</p>`,onMount:contact=>{console.log("card was mounted")},preload:contact=>{}}),InfoCard("location",{title:({data:data})=>sprintf(__("Location","groundhogg"),data.first_name,data.last_name),content:({meta:meta})=>{const{street_address_1:street_address_1,street_address_2:street_address_2,postal_zip:postal_zip,country:country,region:region,ip_address:ip_address,time_zone:time_zone}=meta;return`\n\t\t\t  <div class="location">\n\t\t\t\t  <p><label>${__("Line 1","groundhogg")} ${input({name:"street_address_1"})}</label></p>\n\t\t\t\t  <p><label>${__("Line 2","groundhogg")} ${input({name:"street_address_2"})}</label></p>\n\t\t\t\t  <p><label>${__("City","groundhogg")} ${input({name:"city"})}</label></p>\n\t\t\t\t  <p><label>${__("State","groundhogg")} ${input({name:"region"})}</label></p>\n\t\t\t\t  <p><label>${__("Country","groundhogg")} ${input({name:"country"})}</label></p>\n\t\t\t\t  <p><label>${__("Zip Code","groundhogg")} ${input({name:"postal_zip"})}</label></p>\n\t\t\t  </div>`},onMount:contact=>{console.log("card was mounted")},preload:contact=>{}})]});const ContactActions={};const ContactRecord={contact:contact,render(){return`\n\t\t  <div id="contact-record" class="three-column-layout fixed-full-height">\n\t\t\t  <div class="column-left column">\n\t\t\t\t  <div class="image-to-left">\n\t\t\t\t\t  <img id="gravatar" class="image-on-left"\n\t\t\t\t\t       alt="${__("Profile Picture","groundhogg")}"\n\t\t\t\t\t       src="${this.contact.data.gravatar}"/>\n\t\t\t\t\t  <div class="right-of-image">\n\t\t\t\t\t\t  <h1 id="contact-name">${this.contact.data.first_name} ${this.contact.data.last_name}</h1>\n\t\t\t\t\t\t  <p id="email-address">${this.contact.data.email}</p>\n\t\t\t\t\t  </div>\n\t\t\t\t  </div>\n\t\t\t\t  <div id="contact-actions">\n\t\t\t\t\t  ${el("button",{className:"gh-button icon tertiary text"},icons.email)}\n\t\t\t\t\t  ${el("button",{className:"gh-button icon tertiary text"},icons.tag)}\n\t\t\t\t\t  ${el("button",{className:"gh-button icon tertiary text"},icons.phone)}\n\t\t\t\t\t  ${el("button",{className:"gh-button icon tertiary text"},icons.mobile)}\n\t\t\t\t  </div>\n\t\t\t\t  <div id="contact-primary-info-cards"></div>\n\t\t\t  </div>\n\t\t\t  <div class="column-middle column">\n\t\t\t\t  <div class="gh-panel">\n\t\t\t\t\t  <div class="inside"></div>\n\t\t\t\t  </div>\n\t\t\t  </div>\n\t\t\t  <div class="column-right column">\n\t\t\t\t  <div class="gh-panel">\n\t\t\t\t\t  <div class="inside"></div>\n\n\t\t\t\t  </div>\n\t\t\t  </div>\n\t\t  </div>`},mount(){$("#app").html(this.render());this.onMount()},onMount(){PrimaryInfoCards.mount("#contact-primary-info-cards",contact)}};$((()=>{ContactRecord.mount()}))})(jQuery);